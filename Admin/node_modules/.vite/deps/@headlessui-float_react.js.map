{
  "version": 3,
  "sources": ["../../@headlessui-float/react/dist/headlessui-float.mjs", "../../@headlessui-float/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js", "../../tabbable/src/index.js", "../../@headlessui-float/react/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js"],
  "sourcesContent": ["var $t = Object.defineProperty;\nvar Dt = (t, a, o) => a in t ? $t(t, a, { enumerable: !0, configurable: !0, writable: !0, value: o }) : t[a] = o;\nvar Xe = (t, a, o) => (Dt(t, typeof a != \"symbol\" ? a + \"\" : a, o), o);\nimport Ze, { useEffect as k, useMemo as q, useLayoutEffect as It, useRef as z, createContext as Ce, Fragment as j, forwardRef as Wt, useState as ae, isValidElement as Qe, useCallback as Yt, useContext as Te } from \"react\";\nimport { Portal as Lt, Transition as Je } from \"@headlessui/react\";\nimport { arrow as Nt, useFloating as Mt } from \"@floating-ui/react\";\nimport { offset as Ut, flip as Vt, shift as Bt, autoPlacement as zt, hide as qt, autoUpdate as Xt } from \"@floating-ui/dom\";\nvar _e = { exports: {} }, G = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar Ge;\nfunction Jt() {\n  if (Ge)\n    return G;\n  Ge = 1;\n  var t = Ze, a = Symbol.for(\"react.element\"), o = Symbol.for(\"react.fragment\"), n = Object.prototype.hasOwnProperty, u = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, y = { key: !0, ref: !0, __self: !0, __source: !0 };\n  function d(m, v, b) {\n    var s, c = {}, R = null, l = null;\n    b !== void 0 && (R = \"\" + b), v.key !== void 0 && (R = \"\" + v.key), v.ref !== void 0 && (l = v.ref);\n    for (s in v)\n      n.call(v, s) && !y.hasOwnProperty(s) && (c[s] = v[s]);\n    if (m && m.defaultProps)\n      for (s in v = m.defaultProps, v)\n        c[s] === void 0 && (c[s] = v[s]);\n    return { $$typeof: a, type: m, key: R, ref: l, props: c, _owner: u.current };\n  }\n  return G.Fragment = o, G.jsx = d, G.jsxs = d, G;\n}\nvar H = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar He;\nfunction Gt() {\n  return He || (He = 1, process.env.NODE_ENV !== \"production\" && function() {\n    var t = Ze, a = Symbol.for(\"react.element\"), o = Symbol.for(\"react.portal\"), n = Symbol.for(\"react.fragment\"), u = Symbol.for(\"react.strict_mode\"), y = Symbol.for(\"react.profiler\"), d = Symbol.for(\"react.provider\"), m = Symbol.for(\"react.context\"), v = Symbol.for(\"react.forward_ref\"), b = Symbol.for(\"react.suspense\"), s = Symbol.for(\"react.suspense_list\"), c = Symbol.for(\"react.memo\"), R = Symbol.for(\"react.lazy\"), l = Symbol.for(\"react.offscreen\"), O = Symbol.iterator, A = \"@@iterator\";\n    function W(e) {\n      if (e === null || typeof e != \"object\")\n        return null;\n      var r = O && e[O] || e[A];\n      return typeof r == \"function\" ? r : null;\n    }\n    var T = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function x(e) {\n      {\n        for (var r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), f = 1; f < r; f++)\n          i[f - 1] = arguments[f];\n        M(\"error\", e, i);\n      }\n    }\n    function M(e, r, i) {\n      {\n        var f = T.ReactDebugCurrentFrame, E = f.getStackAddendum();\n        E !== \"\" && (r += \"%s\", i = i.concat([E]));\n        var p = i.map(function(g) {\n          return String(g);\n        });\n        p.unshift(\"Warning: \" + r), Function.prototype.apply.call(console[e], console, p);\n      }\n    }\n    var S = !1, L = !1, N = !1, X = !1, Z = !1, ue;\n    ue = Symbol.for(\"react.module.reference\");\n    function Fe(e) {\n      return !!(typeof e == \"string\" || typeof e == \"function\" || e === n || e === y || Z || e === u || e === b || e === s || X || e === l || S || L || N || typeof e == \"object\" && e !== null && (e.$$typeof === R || e.$$typeof === c || e.$$typeof === d || e.$$typeof === m || e.$$typeof === v || // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      e.$$typeof === ue || e.getModuleId !== void 0));\n    }\n    function ke(e, r, i) {\n      var f = e.displayName;\n      if (f)\n        return f;\n      var E = r.displayName || r.name || \"\";\n      return E !== \"\" ? i + \"(\" + E + \")\" : i;\n    }\n    function ce(e) {\n      return e.displayName || \"Context\";\n    }\n    function $(e) {\n      if (e == null)\n        return null;\n      if (typeof e.tag == \"number\" && x(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"), typeof e == \"function\")\n        return e.displayName || e.name || null;\n      if (typeof e == \"string\")\n        return e;\n      switch (e) {\n        case n:\n          return \"Fragment\";\n        case o:\n          return \"Portal\";\n        case y:\n          return \"Profiler\";\n        case u:\n          return \"StrictMode\";\n        case b:\n          return \"Suspense\";\n        case s:\n          return \"SuspenseList\";\n      }\n      if (typeof e == \"object\")\n        switch (e.$$typeof) {\n          case m:\n            var r = e;\n            return ce(r) + \".Consumer\";\n          case d:\n            var i = e;\n            return ce(i._context) + \".Provider\";\n          case v:\n            return ke(e, e.render, \"ForwardRef\");\n          case c:\n            var f = e.displayName || null;\n            return f !== null ? f : $(e.type) || \"Memo\";\n          case R: {\n            var E = e, p = E._payload, g = E._init;\n            try {\n              return $(g(p));\n            } catch {\n              return null;\n            }\n          }\n        }\n      return null;\n    }\n    var Y = Object.assign, U = 0, se, le, fe, de, ve, he, me;\n    function Q() {\n    }\n    Q.__reactDisabledLog = !0;\n    function st() {\n      {\n        if (U === 0) {\n          se = console.log, le = console.info, fe = console.warn, de = console.error, ve = console.group, he = console.groupCollapsed, me = console.groupEnd;\n          var e = {\n            configurable: !0,\n            enumerable: !0,\n            value: Q,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            info: e,\n            log: e,\n            warn: e,\n            error: e,\n            group: e,\n            groupCollapsed: e,\n            groupEnd: e\n          });\n        }\n        U++;\n      }\n    }\n    function lt() {\n      {\n        if (U--, U === 0) {\n          var e = {\n            configurable: !0,\n            enumerable: !0,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            log: Y({}, e, {\n              value: se\n            }),\n            info: Y({}, e, {\n              value: le\n            }),\n            warn: Y({}, e, {\n              value: fe\n            }),\n            error: Y({}, e, {\n              value: de\n            }),\n            group: Y({}, e, {\n              value: ve\n            }),\n            groupCollapsed: Y({}, e, {\n              value: he\n            }),\n            groupEnd: Y({}, e, {\n              value: me\n            })\n          });\n        }\n        U < 0 && x(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n      }\n    }\n    var ge = T.ReactCurrentDispatcher, ye;\n    function ee(e, r, i) {\n      {\n        if (ye === void 0)\n          try {\n            throw Error();\n          } catch (E) {\n            var f = E.stack.trim().match(/\\n( *(at )?)/);\n            ye = f && f[1] || \"\";\n          }\n        return `\n` + ye + e;\n      }\n    }\n    var be = !1, te;\n    {\n      var ft = typeof WeakMap == \"function\" ? WeakMap : Map;\n      te = new ft();\n    }\n    function Ae(e, r) {\n      if (!e || be)\n        return \"\";\n      {\n        var i = te.get(e);\n        if (i !== void 0)\n          return i;\n      }\n      var f;\n      be = !0;\n      var E = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var p;\n      p = ge.current, ge.current = null, st();\n      try {\n        if (r) {\n          var g = function() {\n            throw Error();\n          };\n          if (Object.defineProperty(g.prototype, \"props\", {\n            set: function() {\n              throw Error();\n            }\n          }), typeof Reflect == \"object\" && Reflect.construct) {\n            try {\n              Reflect.construct(g, []);\n            } catch (I) {\n              f = I;\n            }\n            Reflect.construct(e, [], g);\n          } else {\n            try {\n              g.call();\n            } catch (I) {\n              f = I;\n            }\n            e.call(g.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (I) {\n            f = I;\n          }\n          e();\n        }\n      } catch (I) {\n        if (I && f && typeof I.stack == \"string\") {\n          for (var h = I.stack.split(`\n`), P = f.stack.split(`\n`), _ = h.length - 1, C = P.length - 1; _ >= 1 && C >= 0 && h[_] !== P[C]; )\n            C--;\n          for (; _ >= 1 && C >= 0; _--, C--)\n            if (h[_] !== P[C]) {\n              if (_ !== 1 || C !== 1)\n                do\n                  if (_--, C--, C < 0 || h[_] !== P[C]) {\n                    var F = `\n` + h[_].replace(\" at new \", \" at \");\n                    return e.displayName && F.includes(\"<anonymous>\") && (F = F.replace(\"<anonymous>\", e.displayName)), typeof e == \"function\" && te.set(e, F), F;\n                  }\n                while (_ >= 1 && C >= 0);\n              break;\n            }\n        }\n      } finally {\n        be = !1, ge.current = p, lt(), Error.prepareStackTrace = E;\n      }\n      var B = e ? e.displayName || e.name : \"\", qe = B ? ee(B) : \"\";\n      return typeof e == \"function\" && te.set(e, qe), qe;\n    }\n    function dt(e, r, i) {\n      return Ae(e, !1);\n    }\n    function vt(e) {\n      var r = e.prototype;\n      return !!(r && r.isReactComponent);\n    }\n    function re(e, r, i) {\n      if (e == null)\n        return \"\";\n      if (typeof e == \"function\")\n        return Ae(e, vt(e));\n      if (typeof e == \"string\")\n        return ee(e);\n      switch (e) {\n        case b:\n          return ee(\"Suspense\");\n        case s:\n          return ee(\"SuspenseList\");\n      }\n      if (typeof e == \"object\")\n        switch (e.$$typeof) {\n          case v:\n            return dt(e.render);\n          case c:\n            return re(e.type, r, i);\n          case R: {\n            var f = e, E = f._payload, p = f._init;\n            try {\n              return re(p(E), r, i);\n            } catch {\n            }\n          }\n        }\n      return \"\";\n    }\n    var ne = Object.prototype.hasOwnProperty, $e = {}, De = T.ReactDebugCurrentFrame;\n    function oe(e) {\n      if (e) {\n        var r = e._owner, i = re(e.type, e._source, r ? r.type : null);\n        De.setExtraStackFrame(i);\n      } else\n        De.setExtraStackFrame(null);\n    }\n    function ht(e, r, i, f, E) {\n      {\n        var p = Function.call.bind(ne);\n        for (var g in e)\n          if (p(e, g)) {\n            var h = void 0;\n            try {\n              if (typeof e[g] != \"function\") {\n                var P = Error((f || \"React class\") + \": \" + i + \" type `\" + g + \"` is invalid; it must be a function, usually from the `prop-types` package, but received `\" + typeof e[g] + \"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                throw P.name = \"Invariant Violation\", P;\n              }\n              h = e[g](r, g, f, i, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (_) {\n              h = _;\n            }\n            h && !(h instanceof Error) && (oe(E), x(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", f || \"React class\", i, g, typeof h), oe(null)), h instanceof Error && !(h.message in $e) && ($e[h.message] = !0, oe(E), x(\"Failed %s type: %s\", i, h.message), oe(null));\n          }\n      }\n    }\n    var mt = Array.isArray;\n    function Ee(e) {\n      return mt(e);\n    }\n    function gt(e) {\n      {\n        var r = typeof Symbol == \"function\" && Symbol.toStringTag, i = r && e[Symbol.toStringTag] || e.constructor.name || \"Object\";\n        return i;\n      }\n    }\n    function yt(e) {\n      try {\n        return Ie(e), !1;\n      } catch {\n        return !0;\n      }\n    }\n    function Ie(e) {\n      return \"\" + e;\n    }\n    function We(e) {\n      if (yt(e))\n        return x(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", gt(e)), Ie(e);\n    }\n    var J = T.ReactCurrentOwner, bt = {\n      key: !0,\n      ref: !0,\n      __self: !0,\n      __source: !0\n    }, Ye, Le, we;\n    we = {};\n    function Et(e) {\n      if (ne.call(e, \"ref\")) {\n        var r = Object.getOwnPropertyDescriptor(e, \"ref\").get;\n        if (r && r.isReactWarning)\n          return !1;\n      }\n      return e.ref !== void 0;\n    }\n    function wt(e) {\n      if (ne.call(e, \"key\")) {\n        var r = Object.getOwnPropertyDescriptor(e, \"key\").get;\n        if (r && r.isReactWarning)\n          return !1;\n      }\n      return e.key !== void 0;\n    }\n    function pt(e, r) {\n      if (typeof e.ref == \"string\" && J.current && r && J.current.stateNode !== r) {\n        var i = $(J.current.type);\n        we[i] || (x('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', $(J.current.type), e.ref), we[i] = !0);\n      }\n    }\n    function xt(e, r) {\n      {\n        var i = function() {\n          Ye || (Ye = !0, x(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", r));\n        };\n        i.isReactWarning = !0, Object.defineProperty(e, \"key\", {\n          get: i,\n          configurable: !0\n        });\n      }\n    }\n    function Rt(e, r) {\n      {\n        var i = function() {\n          Le || (Le = !0, x(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", r));\n        };\n        i.isReactWarning = !0, Object.defineProperty(e, \"ref\", {\n          get: i,\n          configurable: !0\n        });\n      }\n    }\n    var _t = function(e, r, i, f, E, p, g) {\n      var h = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: a,\n        // Built-in properties that belong on the element\n        type: e,\n        key: r,\n        ref: i,\n        props: g,\n        // Record the component responsible for creating this element.\n        _owner: p\n      };\n      return h._store = {}, Object.defineProperty(h._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: !1\n      }), Object.defineProperty(h, \"_self\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: f\n      }), Object.defineProperty(h, \"_source\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: E\n      }), Object.freeze && (Object.freeze(h.props), Object.freeze(h)), h;\n    };\n    function Ct(e, r, i, f, E) {\n      {\n        var p, g = {}, h = null, P = null;\n        i !== void 0 && (We(i), h = \"\" + i), wt(r) && (We(r.key), h = \"\" + r.key), Et(r) && (P = r.ref, pt(r, E));\n        for (p in r)\n          ne.call(r, p) && !bt.hasOwnProperty(p) && (g[p] = r[p]);\n        if (e && e.defaultProps) {\n          var _ = e.defaultProps;\n          for (p in _)\n            g[p] === void 0 && (g[p] = _[p]);\n        }\n        if (h || P) {\n          var C = typeof e == \"function\" ? e.displayName || e.name || \"Unknown\" : e;\n          h && xt(g, C), P && Rt(g, C);\n        }\n        return _t(e, h, P, E, f, J.current, g);\n      }\n    }\n    var pe = T.ReactCurrentOwner, Ne = T.ReactDebugCurrentFrame;\n    function V(e) {\n      if (e) {\n        var r = e._owner, i = re(e.type, e._source, r ? r.type : null);\n        Ne.setExtraStackFrame(i);\n      } else\n        Ne.setExtraStackFrame(null);\n    }\n    var xe;\n    xe = !1;\n    function Re(e) {\n      return typeof e == \"object\" && e !== null && e.$$typeof === a;\n    }\n    function Me() {\n      {\n        if (pe.current) {\n          var e = $(pe.current.type);\n          if (e)\n            return `\n\nCheck the render method of \\`` + e + \"`.\";\n        }\n        return \"\";\n      }\n    }\n    function Tt(e) {\n      {\n        if (e !== void 0) {\n          var r = e.fileName.replace(/^.*[\\\\\\/]/, \"\"), i = e.lineNumber;\n          return `\n\nCheck your code at ` + r + \":\" + i + \".\";\n        }\n        return \"\";\n      }\n    }\n    var Ue = {};\n    function jt(e) {\n      {\n        var r = Me();\n        if (!r) {\n          var i = typeof e == \"string\" ? e : e.displayName || e.name;\n          i && (r = `\n\nCheck the top-level render call using <` + i + \">.\");\n        }\n        return r;\n      }\n    }\n    function Ve(e, r) {\n      {\n        if (!e._store || e._store.validated || e.key != null)\n          return;\n        e._store.validated = !0;\n        var i = jt(r);\n        if (Ue[i])\n          return;\n        Ue[i] = !0;\n        var f = \"\";\n        e && e._owner && e._owner !== pe.current && (f = \" It was passed a child from \" + $(e._owner.type) + \".\"), V(e), x('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', i, f), V(null);\n      }\n    }\n    function Be(e, r) {\n      {\n        if (typeof e != \"object\")\n          return;\n        if (Ee(e))\n          for (var i = 0; i < e.length; i++) {\n            var f = e[i];\n            Re(f) && Ve(f, r);\n          }\n        else if (Re(e))\n          e._store && (e._store.validated = !0);\n        else if (e) {\n          var E = W(e);\n          if (typeof E == \"function\" && E !== e.entries)\n            for (var p = E.call(e), g; !(g = p.next()).done; )\n              Re(g.value) && Ve(g.value, r);\n        }\n      }\n    }\n    function Pt(e) {\n      {\n        var r = e.type;\n        if (r == null || typeof r == \"string\")\n          return;\n        var i;\n        if (typeof r == \"function\")\n          i = r.propTypes;\n        else if (typeof r == \"object\" && (r.$$typeof === v || // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        r.$$typeof === c))\n          i = r.propTypes;\n        else\n          return;\n        if (i) {\n          var f = $(r);\n          ht(i, e.props, \"prop\", f, e);\n        } else if (r.PropTypes !== void 0 && !xe) {\n          xe = !0;\n          var E = $(r);\n          x(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", E || \"Unknown\");\n        }\n        typeof r.getDefaultProps == \"function\" && !r.getDefaultProps.isReactClassApproved && x(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\");\n      }\n    }\n    function Ot(e) {\n      {\n        for (var r = Object.keys(e.props), i = 0; i < r.length; i++) {\n          var f = r[i];\n          if (f !== \"children\" && f !== \"key\") {\n            V(e), x(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", f), V(null);\n            break;\n          }\n        }\n        e.ref !== null && (V(e), x(\"Invalid attribute `ref` supplied to `React.Fragment`.\"), V(null));\n      }\n    }\n    function ze(e, r, i, f, E, p) {\n      {\n        var g = Fe(e);\n        if (!g) {\n          var h = \"\";\n          (e === void 0 || typeof e == \"object\" && e !== null && Object.keys(e).length === 0) && (h += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");\n          var P = Tt(E);\n          P ? h += P : h += Me();\n          var _;\n          e === null ? _ = \"null\" : Ee(e) ? _ = \"array\" : e !== void 0 && e.$$typeof === a ? (_ = \"<\" + ($(e.type) || \"Unknown\") + \" />\", h = \" Did you accidentally export a JSX literal instead of a component?\") : _ = typeof e, x(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\", _, h);\n        }\n        var C = Ct(e, r, i, E, p);\n        if (C == null)\n          return C;\n        if (g) {\n          var F = r.children;\n          if (F !== void 0)\n            if (f)\n              if (Ee(F)) {\n                for (var B = 0; B < F.length; B++)\n                  Be(F[B], e);\n                Object.freeze && Object.freeze(F);\n              } else\n                x(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");\n            else\n              Be(F, e);\n        }\n        return e === n ? Ot(C) : Pt(C), C;\n      }\n    }\n    function St(e, r, i) {\n      return ze(e, r, i, !0);\n    }\n    function Ft(e, r, i) {\n      return ze(e, r, i, !1);\n    }\n    var kt = Ft, At = St;\n    H.Fragment = n, H.jsx = kt, H.jsxs = At;\n  }()), H;\n}\nprocess.env.NODE_ENV === \"production\" ? _e.exports = Jt() : _e.exports = Gt();\nvar w = _e.exports;\nclass Ht {\n  constructor() {\n    Xe(this, \"current\", this.detect());\n  }\n  set(a) {\n    this.current !== a && (this.current = a);\n  }\n  reset() {\n    this.set(this.detect());\n  }\n  get isServer() {\n    return this.current === \"server\";\n  }\n  get isClient() {\n    return this.current === \"client\";\n  }\n  detect() {\n    return typeof window > \"u\" || typeof document > \"u\" ? \"server\" : \"client\";\n  }\n}\nconst ie = new Ht();\nfunction Kt(t, a, o, n) {\n  k(() => {\n    const u = [];\n    (typeof n.offset == \"number\" || typeof n.offset == \"object\" || typeof n.offset == \"function\") && u.push(Ut(n.offset)), (n.flip === !0 || typeof n.flip == \"number\" || typeof n.flip == \"object\") && u.push(Vt({\n      padding: typeof n.flip == \"number\" ? n.flip : void 0,\n      ...typeof n.flip == \"object\" ? n.flip : {}\n    })), (n.shift === !0 || typeof n.shift == \"number\" || typeof n.shift == \"object\") && u.push(Bt({\n      padding: typeof n.shift == \"number\" ? n.shift : void 0,\n      ...typeof n.shift == \"object\" ? n.shift : {}\n    })), (n.autoPlacement === !0 || typeof n.autoPlacement == \"object\") && u.push(zt(\n      typeof n.autoPlacement == \"object\" ? n.autoPlacement : void 0\n    )), (n.arrow === !0 || typeof n.arrow == \"number\") && u.push(Nt({\n      element: o,\n      padding: n.arrow === !0 ? 0 : n.arrow\n    })), u.push(...typeof n.middleware == \"function\" ? n.middleware({\n      referenceEl: a.reference,\n      floatingEl: a.floating\n    }) : n.middleware || []), (n.hide === !0 || typeof n.hide == \"object\") && u.push(qt(\n      typeof n.hide == \"object\" ? n.hide : void 0\n    )), t(u);\n  }, [\n    n.offset,\n    n.shift,\n    n.flip,\n    n.arrow,\n    n.autoPlacement,\n    n.hide,\n    n.middleware\n  ]);\n}\nfunction Zt(t, a, o) {\n  k(() => {\n    if (t && ie.isClient && typeof ResizeObserver < \"u\" && a.current && a.current instanceof Element) {\n      const n = new ResizeObserver(([u]) => {\n        const y = u.borderBoxSize.reduce((d, { inlineSize: m }) => d + m, 0);\n        o(y);\n      });\n      return n.observe(a.current), () => {\n        n.disconnect(), o(null);\n      };\n    }\n  }, []);\n}\nconst mr = [\n  \"origin-bottom\",\n  \"origin-top\",\n  \"origin-right\",\n  \"origin-left\",\n  \"origin-bottom-left\",\n  \"origin-bottom-right\",\n  \"origin-top-left\",\n  \"origin-top-right\"\n], Qt = (t) => {\n  switch (t) {\n    case \"top\":\n      return \"origin-bottom\";\n    case \"bottom\":\n      return \"origin-top\";\n    case \"left\":\n      return \"origin-right\";\n    case \"right\":\n      return \"origin-left\";\n    case \"top-start\":\n    case \"right-end\":\n      return \"origin-bottom-left\";\n    case \"top-end\":\n    case \"left-end\":\n      return \"origin-bottom-right\";\n    case \"right-start\":\n    case \"bottom-start\":\n      return \"origin-top-left\";\n    case \"left-start\":\n    case \"bottom-end\":\n      return \"origin-top-right\";\n    default:\n      return \"\";\n  }\n};\nfunction er(t, a) {\n  return q(() => typeof t.originClass == \"function\" ? t.originClass(a) : typeof t.originClass == \"string\" ? t.originClass : t.tailwindcssOriginClass ? Qt(a) : \"\", [a, t.originClass, t.tailwindcssOriginClass]);\n}\nfunction et(t, a, ...o) {\n  if (t in a) {\n    const u = a[t];\n    return typeof u == \"function\" ? u(...o) : u;\n  }\n  const n = new Error(\n    `Tried to handle \"${t}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      a\n    ).map((u) => `\"${u}\"`).join(\", \")}.`\n  );\n  throw Error.captureStackTrace && Error.captureStackTrace(n, et), n;\n}\nfunction tt(t) {\n  return ie.isServer ? null : t instanceof Node ? t.ownerDocument : t && Object.prototype.hasOwnProperty.call(t, \"current\") && t.current instanceof Node ? t.current.ownerDocument : document;\n}\nconst Ke = [\n  \"[contentEditable=true]\",\n  \"[tabindex]\",\n  \"a[href]\",\n  \"area[href]\",\n  \"button:not([disabled])\",\n  \"iframe\",\n  \"input:not([disabled])\",\n  \"select:not([disabled])\",\n  \"textarea:not([disabled])\"\n].map(\n  // TODO: Remove this once JSDOM fixes the issue where an element that is\n  // \"hidden\" can be the document.activeElement, because this is not possible\n  // in real browsers.\n  process.env.NODE_ENV === \"test\" ? (t) => `${t}:not([tabindex='-1']):not([style*='display: none'])` : (t) => `${t}:not([tabindex='-1'])`\n).join(\",\");\nvar rt = /* @__PURE__ */ ((t) => (t[t.Strict = 0] = \"Strict\", t[t.Loose = 1] = \"Loose\", t))(rt || {});\nfunction tr(t, a = 0) {\n  var o;\n  return t === ((o = tt(t)) == null ? void 0 : o.body) ? !1 : et(a, {\n    [\n      0\n      /* Strict */\n    ]() {\n      return t.matches(Ke);\n    },\n    [\n      1\n      /* Loose */\n    ]() {\n      let n = t;\n      for (; n !== null; ) {\n        if (n.matches(Ke))\n          return !0;\n        n = n.parentElement;\n      }\n      return !1;\n    }\n  });\n}\nconst rr = (t, a) => {\n  ie.isServer ? k(t, a) : It(t, a);\n};\nfunction nr(t) {\n  const a = z(t);\n  return rr(() => {\n    a.current = t;\n  }, [t]), a;\n}\nfunction D(t, a, o) {\n  const n = nr(a);\n  k(() => {\n    function u(y) {\n      n.current(y);\n    }\n    return document.addEventListener(t, u, o), () => document.removeEventListener(t, u, o);\n  }, [t, o]);\n}\nfunction or(t, a, o = !0) {\n  const n = z(!1);\n  k(\n    process.env.NODE_ENV === \"test\" ? () => {\n      n.current = o;\n    } : () => {\n      requestAnimationFrame(() => {\n        n.current = o;\n      });\n    },\n    [o]\n  );\n  function u(d, m) {\n    if (!n.current || d.defaultPrevented)\n      return;\n    const v = function s(c) {\n      return typeof c == \"function\" ? s(c()) : Array.isArray(c) || c instanceof Set ? c : [c];\n    }(t), b = m(d);\n    if (b !== null && b.getRootNode().contains(b)) {\n      for (const s of v) {\n        if (s === null)\n          continue;\n        const c = s instanceof HTMLElement ? s : s.current;\n        if (c != null && c.contains(b) || d.composed && d.composedPath().includes(c))\n          return;\n      }\n      return (\n        // This check alllows us to know whether or not we clicked on a \"focusable\" element like a\n        // button or an input. This is a backwards compatibility check so that you can open a <Menu\n        // /> and click on another <Menu /> which should close Menu A and open Menu B. We might\n        // revisit that so that you will require 2 clicks instead.\n        !tr(b, rt.Loose) && // This could be improved, but the `Combobox.Button` adds tabIndex={-1} to make it\n        // unfocusable via the keyboard so that tabbing to the next item from the input doesn't\n        // first go to the button.\n        b.tabIndex !== -1 && d.preventDefault(), a(d, b)\n      );\n    }\n  }\n  const y = z(null);\n  D(\"mousedown\", (d) => {\n    var m, v;\n    n.current && (y.current = ((v = (m = d.composedPath) == null ? void 0 : m.call(d)) == null ? void 0 : v[0]) || d.target);\n  }, !0), D(\n    \"click\",\n    (d) => {\n      y.current && (u(d, () => y.current), y.current = null);\n    },\n    // We will use the `capture` phase so that layers in between with `event.stopPropagation()`\n    // don't \"cancel\" this outside click check. E.g.: A `Menu` inside a `DialogPanel` if the `Menu`\n    // is open, and you click outside of it in the `DialogPanel` the `Menu` should close. However,\n    // the `DialogPanel` has a `onClick(e) { e.stopPropagation() }` which would cancel this.\n    !0\n  ), D(\"blur\", (d) => u(\n    d,\n    () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null\n  ), !0);\n}\nconst je = Ce(null);\nje.displayName = \"ReferenceContext\";\nconst Pe = Ce(null);\nPe.displayName = \"FloatingContext\";\nconst K = Ce(null);\nK.displayName = \"ArrowContext\";\nfunction nt(t) {\n  const a = Te(je);\n  if (a === null) {\n    const o = new Error(`<${t} /> is missing a parent <Float /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(o, nt), o;\n  }\n  return a;\n}\nfunction ot(t) {\n  const a = Te(Pe);\n  if (a === null) {\n    const o = new Error(`<${t} /> is missing a parent <Float /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(o, ot), o;\n  }\n  return a;\n}\nfunction at(t) {\n  const a = Te(K);\n  if (a === null) {\n    const o = new Error(`<${t} /> is missing a parent <Float /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(o, at), o;\n  }\n  return a;\n}\nfunction it(t, a, o, n) {\n  const { referenceRef: u } = n, y = a;\n  if (y.as === j)\n    return /* @__PURE__ */ w.jsx(\n      t.type,\n      {\n        ...t.props,\n        ...o,\n        ref: u\n      }\n    );\n  const d = y.as || \"div\";\n  return /* @__PURE__ */ w.jsx(d, { ...o, ref: u, children: /* @__PURE__ */ w.jsx(t.type, { ...t.props }) });\n}\nfunction Oe(t, a, o, n) {\n  const { floatingRef: u, props: y, mounted: d, setShow: m, x: v, y: b, placement: s, strategy: c, referenceElWidth: R } = n, l = {\n    ...y,\n    ...a\n  }, O = er(l, s), A = {\n    show: d.current ? l.show : !1,\n    enter: `${l.enter || \"\"} ${O}`,\n    enterFrom: `${l.enterFrom || \"\"}`,\n    enterTo: `${l.enterTo || \"\"}`,\n    leave: `${l.leave || \"\"} ${O}`,\n    leaveFrom: `${l.leaveFrom || \"\"}`,\n    leaveTo: `${l.leaveTo || \"\"}`,\n    beforeEnter: () => {\n      m(!0);\n    },\n    afterLeave: () => {\n      m(!1);\n    }\n  }, W = {\n    style: {\n      // If enable dialog mode, then set `transform` to false.\n      ...!l.dialog && (l.transform || l.transform === void 0) ? {\n        position: c,\n        zIndex: l.zIndex || 9999,\n        top: \"0px\",\n        left: \"0px\",\n        right: \"auto\",\n        bottom: \"auto\",\n        transform: `translate(${Math.round(v || 0)}px,${Math.round(b || 0)}px)`\n      } : {\n        position: c,\n        zIndex: l.zIndex || 9999,\n        top: `${b || 0}px`,\n        left: `${v || 0}px`\n      },\n      width: l.adaptiveWidth && typeof R == \"number\" ? `${R}px` : void 0\n    }\n  };\n  function T(S) {\n    return l.portal ? /* @__PURE__ */ w.jsx(Lt, { children: S }) : S;\n  }\n  function x(S) {\n    const L = {\n      ...W,\n      ...o,\n      ref: u\n    };\n    if (l.as === j)\n      return /* @__PURE__ */ w.jsx(\n        S.type,\n        {\n          ...S.props,\n          ...L\n        }\n      );\n    const N = l.as || \"div\";\n    return /* @__PURE__ */ w.jsx(N, { ...L, children: /* @__PURE__ */ w.jsx(S.type, { ...S.props }) });\n  }\n  function M() {\n    return ie.isServer ? d.current && l.show ? /* @__PURE__ */ w.jsx(t.type, { ...t.props }) : /* @__PURE__ */ w.jsx(j, {}) : l.transitionChild ? /* @__PURE__ */ w.jsx(Je.Child, { as: j, ...A, children: /* @__PURE__ */ w.jsx(t.type, { ...t.props }) }) : /* @__PURE__ */ w.jsx(Je, { as: j, ...A, children: /* @__PURE__ */ w.jsx(t.type, { ...t.props }) });\n  }\n  return T(\n    x(\n      M()\n    )\n  );\n}\nfunction ut([t, a], o) {\n  var N, X;\n  const n = z(!1), [u, y] = ae(), d = z(null), m = q(() => ({\n    show: o.onShow || (() => {\n    }),\n    hide: o.onHide || (() => {\n    }),\n    update: o.onUpdate || (() => {\n    })\n  }), [o.onShow, o.onHide, o.onUpdate]), { x: v, y: b, placement: s, strategy: c, update: R, refs: l, middlewareData: O } = Mt({\n    placement: o.placement || \"bottom-start\",\n    strategy: o.strategy,\n    middleware: u\n  }), [A, W] = ae(null), T = Yt(() => {\n    R(), m.update();\n  }, [R, m]);\n  k(T, [o.placement, o.strategy, u]), Kt(y, l, d, o), k(() => {\n    n.current = !0;\n  }, []), Zt(o.adaptiveWidth, l.reference, W), k(() => {\n    if (l.reference.current && l.floating.current && t) {\n      const Z = o.autoUpdate !== !1 ? Xt(\n        l.reference.current,\n        l.floating.current,\n        T,\n        typeof o.autoUpdate == \"object\" ? o.autoUpdate : void 0\n      ) : () => {\n      };\n      return m.show(), () => {\n        Z(), m.hide();\n      };\n    }\n  }, [t, T, l]);\n  const x = z(!0);\n  k(() => {\n    !(l.reference.current instanceof Element) && l.reference.current && l.floating.current && x.current && (x.current = !1, T(), window.requestAnimationFrame(() => {\n      x.current = !0, T();\n    }));\n  }, [l]);\n  const M = {\n    referenceRef: l.setReference,\n    placement: s\n  }, S = {\n    floatingRef: l.setFloating,\n    props: o,\n    mounted: n,\n    setShow: a,\n    x: v,\n    y: b,\n    placement: s,\n    strategy: c,\n    referenceElWidth: A\n  }, L = {\n    arrowRef: d,\n    placement: s,\n    x: (N = O.arrow) == null ? void 0 : N.x,\n    y: (X = O.arrow) == null ? void 0 : X.y\n  };\n  return { referenceApi: M, floatingApi: S, arrowApi: L, x: v, y: b, placement: s, strategy: c, update: T, refs: l, middlewareData: O };\n}\nconst ct = Wt((t, a) => {\n  const [o, n] = ae(t.show ?? !1), {\n    referenceApi: u,\n    floatingApi: y,\n    arrowApi: d,\n    placement: m\n  } = ut([o, n], t), v = { placement: m }, [b, s] = typeof t.children == \"function\" ? t.children(v) : t.children;\n  if (!Qe(b))\n    return console.warn(\"<Float /> is missing a reference and floating element.\"), /* @__PURE__ */ w.jsx(j, {});\n  function c(O) {\n    if (t.as === j || !t.as)\n      return /* @__PURE__ */ w.jsx(j, { children: O });\n    const A = t.as;\n    return /* @__PURE__ */ w.jsx(A, { ref: a, className: t.className, children: O });\n  }\n  if (t.composable || t.dialog)\n    return c(\n      /* @__PURE__ */ w.jsx(je.Provider, { value: u, children: /* @__PURE__ */ w.jsx(Pe.Provider, { value: y, children: /* @__PURE__ */ w.jsx(K.Provider, { value: d, children: typeof t.children == \"function\" ? t.children(v) : t.children }) }) }, \"FloatingNode\")\n    );\n  const R = it(\n    b,\n    { as: j },\n    { key: \"reference-node\" },\n    u\n  ), l = Oe(\n    s,\n    { as: t.floatingAs || \"div\" },\n    {},\n    y\n  );\n  return c([\n    R,\n    /* @__PURE__ */ w.jsx(K.Provider, { value: d, children: l }, \"floating-node\")\n  ]);\n});\nct.displayName = \"Float\";\nfunction ar(t) {\n  if (!t.children)\n    return /* @__PURE__ */ w.jsx(j, {});\n  const a = q(() => {\n    const { as: y, children: d, ...m } = t;\n    return m;\n  }, [t]), o = nt(\"Float.Reference\"), { placement: n } = o, u = { placement: n };\n  return it(\n    typeof t.children == \"function\" ? t.children(u) : t.children,\n    { ...t, as: t.as || j },\n    a,\n    o\n  );\n}\nfunction ir(t) {\n  if (!t.children)\n    return /* @__PURE__ */ w.jsx(j, {});\n  const a = q(() => {\n    const { as: y, enter: d, enterFrom: m, enterTo: v, leave: b, leaveFrom: s, leaveTo: c, originClass: R, tailwindcssOriginClass: l, transitionChild: O, children: A, ...W } = t;\n    return W;\n  }, [t]), o = ot(\"Float.Content\"), { placement: n } = o, u = { placement: n };\n  return Oe(\n    typeof t.children == \"function\" ? t.children(u) : t.children,\n    { ...t, as: t.as || \"div\" },\n    a,\n    o\n  );\n}\nfunction ur(t) {\n  const { arrowRef: a, placement: o, x: n, y: u } = at(\"Float.Arrow\"), y = q(() => {\n    const { as: b, offset: s, children: c, ...R } = t;\n    return R;\n  }, [t]), d = {\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\"\n  }[o.split(\"-\")[0]], m = {\n    left: typeof n == \"number\" ? `${n}px` : void 0,\n    top: typeof u == \"number\" ? `${u}px` : void 0,\n    right: void 0,\n    bottom: void 0,\n    [d]: `${(t.offset ?? 4) * -1}px`,\n    ...y.style\n  };\n  if (t.as === j) {\n    const b = { placement: o }, s = typeof t.children == \"function\" ? t.children(b) : t.children;\n    return !s || !Qe(s) ? /* @__PURE__ */ w.jsx(j, {}) : /* @__PURE__ */ w.jsx(\n      s.type,\n      {\n        ...s.props,\n        ref: a,\n        style: m\n      }\n    );\n  }\n  const v = t.as || \"div\";\n  return /* @__PURE__ */ w.jsx(\n    v,\n    {\n      ref: a,\n      ...y,\n      style: m,\n      children: t.children\n    }\n  );\n}\nfunction Se({ onInitial: t, children: a, ...o }) {\n  const [n, u] = ae(o.show ?? !1), y = q(() => {\n    const { as: l, show: O, placement: A, strategy: W, offset: T, shift: x, flip: M, arrow: S, autoPlacement: L, hide: N, autoUpdate: X, zIndex: Z, enter: ue, enterFrom: Fe, enterTo: ke, leave: ce, leaveFrom: $, leaveTo: Y, originClass: U, tailwindcssOriginClass: se, portal: le, transform: fe, middleware: de, onShow: ve, onHide: he, onUpdate: me, ...Q } = o;\n    return Q;\n  }, [o]), {\n    floatingApi: d,\n    arrowApi: m,\n    placement: v,\n    refs: b\n  } = ut([n, u], o);\n  k(() => {\n    u(o.show ?? !1);\n  }, [o.show]);\n  function s() {\n    n && u(!1);\n  }\n  if (t({ show: n, setShow: u, placement: v, refs: b }), !a)\n    return /* @__PURE__ */ w.jsx(j, {});\n  const R = Oe(\n    typeof a == \"function\" ? a({ placement: v, close: s }) : a,\n    {\n      ...o,\n      as: o.as || j,\n      show: n\n    },\n    y,\n    d\n  );\n  return /* @__PURE__ */ w.jsx(K.Provider, { value: m, children: R });\n}\nfunction cr(t) {\n  function a({ setShow: o, refs: n }) {\n    D(\"contextmenu\", (u) => {\n      u.preventDefault(), n.setPositionReference({\n        getBoundingClientRect() {\n          return {\n            width: 0,\n            height: 0,\n            x: u.clientX,\n            y: u.clientY,\n            top: u.clientY,\n            left: u.clientX,\n            right: u.clientX,\n            bottom: u.clientY\n          };\n        }\n      }), o(!0);\n    }), or(n.floating, () => {\n      o(!1);\n    });\n  }\n  return /* @__PURE__ */ w.jsx(\n    Se,\n    {\n      flip: !0,\n      ...t,\n      show: !1,\n      portal: !0,\n      onInitial: a\n    }\n  );\n}\nfunction sr({ globalHideCursor: t, ...a }) {\n  function o({ setShow: n, refs: u }) {\n    function y() {\n      n(!0);\n    }\n    function d() {\n      n(!1);\n    }\n    function m(c) {\n      u.setPositionReference({\n        getBoundingClientRect() {\n          return {\n            width: 0,\n            height: 0,\n            x: c.clientX,\n            y: c.clientY,\n            top: c.clientY,\n            left: c.clientX,\n            right: c.clientX,\n            bottom: c.clientY\n          };\n        }\n      });\n    }\n    function v(c) {\n      y(), m(c);\n    }\n    function b(c) {\n      y(), m(c.touches[0]);\n    }\n    const s = tt(u.floating);\n    s && (k(() => {\n      if ((t || t === void 0) && !s.getElementById(\"headlesui-float-cursor-style\")) {\n        const c = s.createElement(\"style\");\n        return (s.head || s.getElementsByTagName(\"head\")[0]).appendChild(c), c.id = \"headlesui-float-cursor-style\", c.appendChild(s.createTextNode([\n          \"*, *::before, *::after {\",\n          \"  cursor: none !important;\",\n          \"}\",\n          \".headlesui-float-cursor-root {\",\n          \"  pointer-events: none !important;\",\n          \"}\"\n        ].join(`\n`))), () => {\n          var l;\n          return (l = s.getElementById(\"headlesui-float-cursor-style\")) == null ? void 0 : l.remove();\n        };\n      }\n    }, [t]), \"ontouchstart\" in window || navigator.maxTouchPoints > 0 ? (D(\"touchstart\", b), D(\"touchend\", d), D(\"touchmove\", b)) : (D(\"mouseenter\", v), D(\"mouseleave\", d), D(\"mousemove\", v)));\n  }\n  return /* @__PURE__ */ w.jsx(\n    Se,\n    {\n      ...a,\n      portal: !0,\n      className: \"headlesui-float-cursor-root\",\n      onInitial: o\n    }\n  );\n}\nconst gr = Object.assign(ct, { Reference: ar, Content: ir, Arrow: ur, Virtual: Se, ContextMenu: cr, Cursor: sr });\nexport {\n  gr as Float,\n  Oe as renderFloatingElement,\n  it as renderReferenceElement,\n  Qt as tailwindcssOriginClassResolver,\n  mr as tailwindcssOriginSafelist,\n  or as useOutsideClick\n};\n", "import * as React from 'react';\nimport { useLayoutEffect, useEffect, useRef } from 'react';\nimport { hideOthers } from 'aria-hidden';\nimport { tabbable } from 'tabbable';\nimport { createPortal, flushSync } from 'react-dom';\nimport { getOverflowAncestors, offset, detectOverflow, useFloating as useFloating$1 } from '@floating-ui/react-dom';\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nlet serverHandoffComplete = false;\nlet count = 0;\nconst genId = () => \"floating-ui-\" + count++;\nfunction useFloatingId() {\n  const [id, setId] = React.useState(() => serverHandoffComplete ? genId() : undefined);\n  index(() => {\n    if (id == null) {\n      setId(genId());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    if (!serverHandoffComplete) {\n      serverHandoffComplete = true;\n    }\n  }, []);\n  return id;\n}\n\n// `toString()` prevents bundlers from trying to `import { useId } from 'react'`\nconst useReactId = React[/*#__PURE__*/'useId'.toString()];\n\n/**\n * Uses React 18's built-in `useId()` when available, or falls back to a\n * slightly less performant (requiring a double render) implementation for\n * earlier React versions.\n * @see https://floating-ui.com/docs/useId\n */\nconst useId = useReactId || useFloatingId;\n\nfunction createPubSub() {\n  const map = new Map();\n  return {\n    emit(event, data) {\n      var _map$get;\n      (_map$get = map.get(event)) == null ? void 0 : _map$get.forEach(handler => handler(data));\n    },\n    on(event, listener) {\n      map.set(event, [...(map.get(event) || []), listener]);\n    },\n    off(event, listener) {\n      map.set(event, (map.get(event) || []).filter(l => l !== listener));\n    }\n  };\n}\n\nconst FloatingNodeContext = /*#__PURE__*/React.createContext(null);\nconst FloatingTreeContext = /*#__PURE__*/React.createContext(null);\nconst useFloatingParentNodeId = () => {\n  var _React$useContext;\n  return ((_React$useContext = React.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;\n};\nconst useFloatingTree = () => React.useContext(FloatingTreeContext);\n\n/**\n * Registers a node into the floating tree, returning its id.\n */\nconst useFloatingNodeId = customParentId => {\n  const id = useId();\n  const tree = useFloatingTree();\n  const reactParentId = useFloatingParentNodeId();\n  const parentId = customParentId || reactParentId;\n  index(() => {\n    const node = {\n      id,\n      parentId\n    };\n    tree == null ? void 0 : tree.addNode(node);\n    return () => {\n      tree == null ? void 0 : tree.removeNode(node);\n    };\n  }, [tree, id, parentId]);\n  return id;\n};\n\n/**\n * Provides parent node context for nested floating elements.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nconst FloatingNode = _ref => {\n  let {\n    children,\n    id\n  } = _ref;\n  const parentId = useFloatingParentNodeId();\n  return /*#__PURE__*/React.createElement(FloatingNodeContext.Provider, {\n    value: React.useMemo(() => ({\n      id,\n      parentId\n    }), [id, parentId])\n  }, children);\n};\n\n/**\n * Provides context for nested floating elements when they are not children of\n * each other on the DOM (i.e. portalled to a common node, rather than their\n * respective parent).\n * @see https://floating-ui.com/docs/FloatingTree\n */\nconst FloatingTree = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  const nodesRef = React.useRef([]);\n  const addNode = React.useCallback(node => {\n    nodesRef.current = [...nodesRef.current, node];\n  }, []);\n  const removeNode = React.useCallback(node => {\n    nodesRef.current = nodesRef.current.filter(n => n !== node);\n  }, []);\n  const events = React.useState(() => createPubSub())[0];\n  return /*#__PURE__*/React.createElement(FloatingTreeContext.Provider, {\n    value: React.useMemo(() => ({\n      nodesRef,\n      addNode,\n      removeNode,\n      events\n    }), [nodesRef, addNode, removeNode, events])\n  }, children);\n};\n\nfunction getDocument(node) {\n  return (node == null ? void 0 : node.ownerDocument) || document;\n}\n\n// Avoid Chrome DevTools blue warning.\nfunction getPlatform() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.platform) {\n    return uaData.platform;\n  }\n  return navigator.platform;\n}\nfunction getUserAgent() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(_ref => {\n      let {\n        brand,\n        version\n      } = _ref;\n      return brand + \"/\" + version;\n    }).join(' ');\n  }\n  return navigator.userAgent;\n}\n\nfunction getWindow(value) {\n  return getDocument(value).defaultView || window;\n}\nfunction isElement(value) {\n  return value ? value instanceof getWindow(value).Element : false;\n}\nfunction isHTMLElement(value) {\n  return value ? value instanceof getWindow(value).HTMLElement : false;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\n// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts\nfunction isVirtualClick(event) {\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  const androidRe = /Android/i;\n  if ((androidRe.test(getPlatform()) || androidRe.test(getUserAgent())) && event.pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isVirtualPointerEvent(event) {\n  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType !== 'mouse' ||\n  // iOS VoiceOver returns 0.333• for width/height.\n  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0;\n}\nfunction isSafari() {\n  // Chrome DevTools does not complain about navigator.vendor\n  return /apple/i.test(navigator.vendor);\n}\nfunction isMac() {\n  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;\n}\nfunction isMouseLikePointerType(pointerType, strict) {\n  // On some Linux machines with Chromium, mouse inputs return a `pointerType`\n  // of \"pen\": https://github.com/floating-ui/floating-ui/issues/2015\n  const values = ['mouse', 'pen'];\n  if (!strict) {\n    values.push('', undefined);\n  }\n  return values.includes(pointerType);\n}\n\nfunction useLatestRef(value) {\n  const ref = useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\nconst safePolygonIdentifier = 'data-floating-ui-safe-polygon';\nfunction getDelay(value, prop, pointerType) {\n  if (pointerType && !isMouseLikePointerType(pointerType)) {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return value == null ? void 0 : value[prop];\n}\n/**\n * Opens the floating element while hovering over the reference element, like\n * CSS `:hover`.\n * @see https://floating-ui.com/docs/useHover\n */\nconst useHover = function (context, _temp) {\n  let {\n    enabled = true,\n    delay = 0,\n    handleClose = null,\n    mouseOnly = false,\n    restMs = 0,\n    move = true\n  } = _temp === void 0 ? {} : _temp;\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    elements: {\n      domReference,\n      floating\n    },\n    refs\n  } = context;\n  const tree = useFloatingTree();\n  const parentId = useFloatingParentNodeId();\n  const handleCloseRef = useLatestRef(handleClose);\n  const delayRef = useLatestRef(delay);\n  const pointerTypeRef = React.useRef();\n  const timeoutRef = React.useRef();\n  const handlerRef = React.useRef();\n  const restTimeoutRef = React.useRef();\n  const blockMouseMoveRef = React.useRef(true);\n  const performedPointerEventsMutationRef = React.useRef(false);\n  const unbindMouseMoveRef = React.useRef(() => {});\n  const isHoverOpen = React.useCallback(() => {\n    var _dataRef$current$open;\n    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;\n    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';\n  }, [dataRef]);\n\n  // When dismissing before opening, clear the delay timeouts to cancel it\n  // from showing.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onDismiss() {\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      blockMouseMoveRef.current = true;\n    }\n    events.on('dismiss', onDismiss);\n    return () => {\n      events.off('dismiss', onDismiss);\n    };\n  }, [enabled, events]);\n  React.useEffect(() => {\n    if (!enabled || !handleCloseRef.current || !open) {\n      return;\n    }\n    function onLeave() {\n      if (isHoverOpen()) {\n        onOpenChange(false);\n      }\n    }\n    const html = getDocument(floating).documentElement;\n    html.addEventListener('mouseleave', onLeave);\n    return () => {\n      html.removeEventListener('mouseleave', onLeave);\n    };\n  }, [floating, open, onOpenChange, enabled, handleCloseRef, dataRef, isHoverOpen]);\n  const closeWithDelay = React.useCallback(function (runElseBranch) {\n    if (runElseBranch === void 0) {\n      runElseBranch = true;\n    }\n    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);\n    if (closeDelay && !handlerRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = setTimeout(() => onOpenChange(false), closeDelay);\n    } else if (runElseBranch) {\n      clearTimeout(timeoutRef.current);\n      onOpenChange(false);\n    }\n  }, [delayRef, onOpenChange]);\n  const cleanupMouseMoveHandler = React.useCallback(() => {\n    unbindMouseMoveRef.current();\n    handlerRef.current = undefined;\n  }, []);\n  const clearPointerEvents = React.useCallback(() => {\n    if (performedPointerEventsMutationRef.current) {\n      const body = getDocument(refs.floating.current).body;\n      body.style.pointerEvents = '';\n      body.removeAttribute(safePolygonIdentifier);\n      performedPointerEventsMutationRef.current = false;\n    }\n  }, [refs]);\n\n  // Registering the mouse events on the reference directly to bypass React's\n  // delegation system. If the cursor was on a disabled element and then entered\n  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function isClickLikeOpenEvent() {\n      return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;\n    }\n    function onMouseEnter(event) {\n      clearTimeout(timeoutRef.current);\n      blockMouseMoveRef.current = false;\n      if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && getDelay(delayRef.current, 'open') === 0) {\n        return;\n      }\n      dataRef.current.openEvent = event;\n      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);\n      if (openDelay) {\n        timeoutRef.current = setTimeout(() => {\n          onOpenChange(true);\n        }, openDelay);\n      } else {\n        onOpenChange(true);\n      }\n    }\n    function onMouseLeave(event) {\n      if (isClickLikeOpenEvent()) {\n        return;\n      }\n      unbindMouseMoveRef.current();\n      const doc = getDocument(floating);\n      clearTimeout(restTimeoutRef.current);\n      if (handleCloseRef.current) {\n        // Prevent clearing `onScrollMouseLeave` timeout.\n        if (!open) {\n          clearTimeout(timeoutRef.current);\n        }\n        handlerRef.current = handleCloseRef.current({\n          ...context,\n          tree,\n          x: event.clientX,\n          y: event.clientY,\n          onClose() {\n            clearPointerEvents();\n            cleanupMouseMoveHandler();\n            closeWithDelay();\n          }\n        });\n        const handler = handlerRef.current;\n        doc.addEventListener('mousemove', handler);\n        unbindMouseMoveRef.current = () => {\n          doc.removeEventListener('mousemove', handler);\n        };\n        return;\n      }\n      closeWithDelay();\n    }\n\n    // Ensure the floating element closes after scrolling even if the pointer\n    // did not move.\n    // https://github.com/floating-ui/floating-ui/discussions/1692\n    function onScrollMouseLeave(event) {\n      if (isClickLikeOpenEvent()) {\n        return;\n      }\n      handleCloseRef.current == null ? void 0 : handleCloseRef.current({\n        ...context,\n        tree,\n        x: event.clientX,\n        y: event.clientY,\n        onClose() {\n          clearPointerEvents();\n          cleanupMouseMoveHandler();\n          closeWithDelay();\n        }\n      })(event);\n    }\n    if (isElement(domReference)) {\n      const ref = domReference;\n      open && ref.addEventListener('mouseleave', onScrollMouseLeave);\n      floating == null ? void 0 : floating.addEventListener('mouseleave', onScrollMouseLeave);\n      move && ref.addEventListener('mousemove', onMouseEnter, {\n        once: true\n      });\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      return () => {\n        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);\n        floating == null ? void 0 : floating.removeEventListener('mouseleave', onScrollMouseLeave);\n        move && ref.removeEventListener('mousemove', onMouseEnter);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [domReference, floating, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, tree, delayRef, handleCloseRef, dataRef]);\n\n  // Block pointer-events of every element other than the reference and floating\n  // while the floating element is open and has a `handleClose` handler. Also\n  // handles nested floating elements.\n  // https://github.com/floating-ui/floating-ui/issues/1722\n  index(() => {\n    var _handleCloseRef$curre;\n    if (!enabled) {\n      return;\n    }\n    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {\n      const body = getDocument(floating).body;\n      body.setAttribute(safePolygonIdentifier, '');\n      body.style.pointerEvents = 'none';\n      performedPointerEventsMutationRef.current = true;\n      if (isElement(domReference) && floating) {\n        var _tree$nodesRef$curren, _tree$nodesRef$curren2;\n        const ref = domReference;\n        const parentFloating = tree == null ? void 0 : (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null ? void 0 : (_tree$nodesRef$curren2 = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren2.elements.floating;\n        if (parentFloating) {\n          parentFloating.style.pointerEvents = '';\n        }\n        ref.style.pointerEvents = 'auto';\n        floating.style.pointerEvents = 'auto';\n        return () => {\n          ref.style.pointerEvents = '';\n          floating.style.pointerEvents = '';\n        };\n      }\n    }\n  }, [enabled, open, parentId, floating, domReference, tree, handleCloseRef, dataRef, isHoverOpen]);\n  index(() => {\n    if (!open) {\n      pointerTypeRef.current = undefined;\n      cleanupMouseMoveHandler();\n      clearPointerEvents();\n    }\n  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);\n  React.useEffect(() => {\n    return () => {\n      cleanupMouseMoveHandler();\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      clearPointerEvents();\n    };\n  }, [enabled, cleanupMouseMoveHandler, clearPointerEvents]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    function setPointerRef(event) {\n      pointerTypeRef.current = event.pointerType;\n    }\n    return {\n      reference: {\n        onPointerDown: setPointerRef,\n        onPointerEnter: setPointerRef,\n        onMouseMove() {\n          if (open || restMs === 0) {\n            return;\n          }\n          clearTimeout(restTimeoutRef.current);\n          restTimeoutRef.current = setTimeout(() => {\n            if (!blockMouseMoveRef.current) {\n              onOpenChange(true);\n            }\n          }, restMs);\n        }\n      },\n      floating: {\n        onMouseEnter() {\n          clearTimeout(timeoutRef.current);\n        },\n        onMouseLeave() {\n          events.emit('dismiss', {\n            type: 'mouseLeave',\n            data: {\n              returnFocus: false\n            }\n          });\n          closeWithDelay(false);\n        }\n      }\n    };\n  }, [events, enabled, restMs, open, onOpenChange, closeWithDelay]);\n};\n\nconst FloatingDelayGroupContext = /*#__PURE__*/React.createContext({\n  delay: 0,\n  initialDelay: 0,\n  timeoutMs: 0,\n  currentId: null,\n  setCurrentId: () => {},\n  setState: () => {},\n  isInstantPhase: false\n});\nconst useDelayGroupContext = () => React.useContext(FloatingDelayGroupContext);\n\n/**\n * Provides context for a group of floating elements that should share a\n * `delay`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nconst FloatingDelayGroup = _ref => {\n  let {\n    children,\n    delay,\n    timeoutMs = 0\n  } = _ref;\n  const [state, setState] = React.useReducer((prev, next) => ({\n    ...prev,\n    ...next\n  }), {\n    delay,\n    timeoutMs,\n    initialDelay: delay,\n    currentId: null,\n    isInstantPhase: false\n  });\n  const initialCurrentIdRef = React.useRef(null);\n  const setCurrentId = React.useCallback(currentId => {\n    setState({\n      currentId\n    });\n  }, []);\n  index(() => {\n    if (state.currentId) {\n      if (initialCurrentIdRef.current === null) {\n        initialCurrentIdRef.current = state.currentId;\n      } else {\n        setState({\n          isInstantPhase: true\n        });\n      }\n    } else {\n      setState({\n        isInstantPhase: false\n      });\n      initialCurrentIdRef.current = null;\n    }\n  }, [state.currentId]);\n  return /*#__PURE__*/React.createElement(FloatingDelayGroupContext.Provider, {\n    value: React.useMemo(() => ({\n      ...state,\n      setState,\n      setCurrentId\n    }), [state, setState, setCurrentId])\n  }, children);\n};\nconst useDelayGroup = (_ref2, _ref3) => {\n  let {\n    open,\n    onOpenChange\n  } = _ref2;\n  let {\n    id\n  } = _ref3;\n  const {\n    currentId,\n    setCurrentId,\n    initialDelay,\n    setState,\n    timeoutMs\n  } = useDelayGroupContext();\n  React.useEffect(() => {\n    if (currentId) {\n      setState({\n        delay: {\n          open: 1,\n          close: getDelay(initialDelay, 'close')\n        }\n      });\n      if (currentId !== id) {\n        onOpenChange(false);\n      }\n    }\n  }, [id, onOpenChange, setState, currentId, initialDelay]);\n  React.useEffect(() => {\n    function unset() {\n      onOpenChange(false);\n      setState({\n        delay: initialDelay,\n        currentId: null\n      });\n    }\n    if (!open && currentId === id) {\n      if (timeoutMs) {\n        const timeout = window.setTimeout(unset, timeoutMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      } else {\n        unset();\n      }\n    }\n  }, [open, setState, currentId, id, onOpenChange, initialDelay, timeoutMs]);\n  React.useEffect(() => {\n    if (open) {\n      setCurrentId(id);\n    }\n  }, [open, setCurrentId, id]);\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Find the real active element. Traverses into shadowRoots.\n */\nfunction activeElement$1(doc) {\n  let activeElement = doc.activeElement;\n  while (((_activeElement = activeElement) == null ? void 0 : (_activeElement$shadow = _activeElement.shadowRoot) == null ? void 0 : _activeElement$shadow.activeElement) != null) {\n    var _activeElement, _activeElement$shadow;\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n  return activeElement;\n}\n\nfunction contains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  const rootNode = child.getRootNode && child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n  // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    do {\n      if (next && parent === next) {\n        return true;\n      }\n      // @ts-ignore\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  // Give up, the result is false\n  return false;\n}\n\nlet rafId = 0;\nfunction enqueueFocus(el, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    preventScroll = false,\n    cancelPrevious = true,\n    sync = false\n  } = options;\n  cancelPrevious && cancelAnimationFrame(rafId);\n  const exec = () => el == null ? void 0 : el.focus({\n    preventScroll\n  });\n  if (sync) {\n    exec();\n  } else {\n    rafId = requestAnimationFrame(exec);\n  }\n}\n\nfunction getAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\n\nfunction getChildren(nodes, id) {\n  let allChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);\n  }) || [];\n  let currentChildren = allChildren;\n  while (currentChildren.length) {\n    currentChildren = nodes.filter(node => {\n      var _currentChildren;\n      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {\n        var _node$context2;\n        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);\n      });\n    }) || [];\n    allChildren = allChildren.concat(currentChildren);\n  }\n  return allChildren;\n}\n\nfunction getTarget(event) {\n  if ('composedPath' in event) {\n    return event.composedPath()[0];\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support\n  // `composedPath()`, but browsers without shadow DOM don't.\n  return event.target;\n}\n\nconst TYPEABLE_SELECTOR = \"input:not([type='hidden']):not([disabled]),\" + \"[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\";\nfunction isTypeableElement(element) {\n  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);\n}\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, direction) {\n  const allTabbable = tabbable(container, getTabbableOptions());\n  if (direction === 'prev') {\n    allTabbable.reverse();\n  }\n  const activeIndex = allTabbable.indexOf(activeElement$1(getDocument(container)));\n  const nextTabbableElements = allTabbable.slice(activeIndex + 1);\n  return nextTabbableElements[0];\n}\nfunction getNextTabbable() {\n  return getTabbableIn(document.body, 'next');\n}\nfunction getPreviousTabbable() {\n  return getTabbableIn(document.body, 'prev');\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\n// `toString()` prevents bundlers from trying to `import { useInsertionEffect } from 'react'`\nconst useInsertionEffect = React[/*#__PURE__*/'useInsertionEffect'.toString()];\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\n\n// See Diego Haz's Sandbox for making this logic work well on Safari/iOS:\n// https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/FocusTrap.tsx\n\nconst HIDDEN_STYLES = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'fixed',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  top: 0,\n  left: 0\n};\nlet activeElement;\nlet timeoutId;\nfunction setActiveElementOnTab(event) {\n  if (event.key === 'Tab') {\n    activeElement = event.target;\n    clearTimeout(timeoutId);\n  }\n}\nfunction isTabFocus(event) {\n  const result = activeElement === event.relatedTarget;\n  activeElement = event.relatedTarget;\n  clearTimeout(timeoutId);\n  return result;\n}\nconst FocusGuard = /*#__PURE__*/React.forwardRef(function FocusGuard(props, ref) {\n  const onFocus = useEvent(props.onFocus);\n  const [role, setRole] = React.useState();\n  index(() => {\n    if (isSafari()) {\n      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor\n      // on VoiceOver does trigger the onFocus event, so we can use the focus\n      // trap element. On Safari, only buttons trigger the onFocus event.\n      // NB: \"group\" role in the Sandbox no longer appears to work, must be a\n      // button role.\n      setRole('button');\n    }\n    document.addEventListener('keydown', setActiveElementOnTab);\n    return () => {\n      document.removeEventListener('keydown', setActiveElementOnTab);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, props, {\n    ref: ref,\n    tabIndex: 0\n    // Role is only for VoiceOver\n    ,\n    role: role,\n    \"aria-hidden\": role ? undefined : true,\n    \"data-floating-ui-focus-guard\": \"\",\n    style: HIDDEN_STYLES,\n    onFocus: event => {\n      if (isSafari() && isMac() && !isTabFocus(event)) {\n        // On macOS we need to wait a little bit before moving\n        // focus again.\n        event.persist();\n        timeoutId = window.setTimeout(() => {\n          onFocus(event);\n        }, 50);\n      } else {\n        onFocus(event);\n      }\n    }\n  }));\n});\n\nconst PortalContext = /*#__PURE__*/React.createContext(null);\nconst useFloatingPortalNode = function (_temp) {\n  let {\n    id,\n    enabled = true\n  } = _temp === void 0 ? {} : _temp;\n  const [portalEl, setPortalEl] = React.useState(null);\n  const uniqueId = useId();\n  const portalContext = usePortalContext();\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    const rootNode = id ? document.getElementById(id) : null;\n    if (rootNode) {\n      rootNode.setAttribute('data-floating-ui-portal', '');\n      setPortalEl(rootNode);\n    } else {\n      const newPortalEl = document.createElement('div');\n      if (id !== '') {\n        newPortalEl.id = id || uniqueId;\n      }\n      newPortalEl.setAttribute('data-floating-ui-portal', '');\n      setPortalEl(newPortalEl);\n      const container = (portalContext == null ? void 0 : portalContext.portalNode) || document.body;\n      container.appendChild(newPortalEl);\n      return () => {\n        container.removeChild(newPortalEl);\n      };\n    }\n  }, [id, portalContext, uniqueId, enabled]);\n  return portalEl;\n};\n\n/**\n * Portals the floating element into a given container element — by default,\n * outside of the app root and into the body.\n * @see https://floating-ui.com/docs/FloatingPortal\n */\nconst FloatingPortal = _ref => {\n  let {\n    children,\n    id,\n    root = null,\n    preserveTabOrder = true\n  } = _ref;\n  const portalNode = useFloatingPortalNode({\n    id,\n    enabled: !root\n  });\n  const [focusManagerState, setFocusManagerState] = React.useState(null);\n  const beforeOutsideRef = React.useRef(null);\n  const afterOutsideRef = React.useRef(null);\n  const beforeInsideRef = React.useRef(null);\n  const afterInsideRef = React.useRef(null);\n  const shouldRenderGuards =\n  // The FocusManager and therefore floating element are currently open/\n  // rendered.\n  !!focusManagerState &&\n  // Guards are only for non-modal focus management.\n  !focusManagerState.modal && !!(root || portalNode) && preserveTabOrder;\n\n  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx\n  React.useEffect(() => {\n    if (!portalNode || !preserveTabOrder || focusManagerState != null && focusManagerState.modal) {\n      return;\n    }\n\n    // Make sure elements inside the portal element are tabbable only when the\n    // portal has already been focused, either by tabbing into a focus trap\n    // element outside or using the mouse.\n    function onFocus(event) {\n      if (portalNode && isOutsideEvent(event)) {\n        const focusing = event.type === 'focusin';\n        const manageFocus = focusing ? enableFocusInside : disableFocusInside;\n        manageFocus(portalNode);\n      }\n    }\n    // Listen to the event on the capture phase so they run before the focus\n    // trap elements onFocus prop is called.\n    portalNode.addEventListener('focusin', onFocus, true);\n    portalNode.addEventListener('focusout', onFocus, true);\n    return () => {\n      portalNode.removeEventListener('focusin', onFocus, true);\n      portalNode.removeEventListener('focusout', onFocus, true);\n    };\n  }, [portalNode, preserveTabOrder, focusManagerState == null ? void 0 : focusManagerState.modal]);\n  return /*#__PURE__*/React.createElement(PortalContext.Provider, {\n    value: React.useMemo(() => ({\n      preserveTabOrder,\n      beforeOutsideRef,\n      afterOutsideRef,\n      beforeInsideRef,\n      afterInsideRef,\n      portalNode,\n      setFocusManagerState\n    }), [preserveTabOrder, portalNode])\n  }, shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: beforeOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _beforeInsideRef$curr;\n        (_beforeInsideRef$curr = beforeInsideRef.current) == null ? void 0 : _beforeInsideRef$curr.focus();\n      } else {\n        const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        prevTabbable == null ? void 0 : prevTabbable.focus();\n      }\n    }\n  }), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-owns\": portalNode.id,\n    style: HIDDEN_STYLES\n  }), root ? /*#__PURE__*/createPortal(children, root) : portalNode ? /*#__PURE__*/createPortal(children, portalNode) : null, shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: afterOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _afterInsideRef$curre;\n        (_afterInsideRef$curre = afterInsideRef.current) == null ? void 0 : _afterInsideRef$curre.focus();\n      } else {\n        const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        nextTabbable == null ? void 0 : nextTabbable.focus();\n        (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false));\n      }\n    }\n  }));\n};\nconst usePortalContext = () => React.useContext(PortalContext);\n\nconst VisuallyHiddenDismiss = /*#__PURE__*/React.forwardRef(function VisuallyHiddenDismiss(props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    type: \"button\",\n    ref: ref,\n    tabIndex: -1,\n    style: HIDDEN_STYLES\n  }));\n});\n/**\n * Provides focus management for the floating element.\n * @see https://floating-ui.com/docs/FloatingFocusManager\n */\nfunction FloatingFocusManager(_ref) {\n  let {\n    context,\n    children,\n    order = ['content'],\n    guards = true,\n    initialFocus = 0,\n    returnFocus = true,\n    modal = true,\n    visuallyHiddenDismiss = false,\n    closeOnFocusOut = true\n  } = _ref;\n  const {\n    refs,\n    nodeId,\n    onOpenChange,\n    events,\n    dataRef,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const orderRef = useLatestRef(order);\n  const tree = useFloatingTree();\n  const portalContext = usePortalContext();\n  const [tabbableContentLength, setTabbableContentLength] = React.useState(null);\n\n  // Controlled by `useListNavigation`.\n  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;\n  const startDismissButtonRef = React.useRef(null);\n  const endDismissButtonRef = React.useRef(null);\n  const preventReturnFocusRef = React.useRef(false);\n  const previouslyFocusedElementRef = React.useRef(null);\n  const isPointerDownRef = React.useRef(false);\n  const isInsidePortal = portalContext != null;\n\n  // If the reference is a combobox and is typeable (e.g. input/textarea),\n  // there are different focus semantics. The guards should not be rendered, but\n  // aria-hidden should be applied to all nodes still. Further, the visually\n  // hidden dismiss button should only appear at the end of the list, not the\n  // start.\n  const isTypeableCombobox = domReference && domReference.getAttribute('role') === 'combobox' && isTypeableElement(domReference);\n  const getTabbableContent = React.useCallback(function (container) {\n    if (container === void 0) {\n      container = floating;\n    }\n    return container ? tabbable(container, getTabbableOptions()) : [];\n  }, [floating]);\n  const getTabbableElements = React.useCallback(container => {\n    const content = getTabbableContent(container);\n    return orderRef.current.map(type => {\n      if (domReference && type === 'reference') {\n        return domReference;\n      }\n      if (floating && type === 'floating') {\n        return floating;\n      }\n      return content;\n    }).filter(Boolean).flat();\n  }, [domReference, floating, orderRef, getTabbableContent]);\n  React.useEffect(() => {\n    if (!modal) {\n      return;\n    }\n    function onKeyDown(event) {\n      if (event.key === 'Tab') {\n        // The focus guards have nothing to focus, so we need to stop the event.\n        if (getTabbableContent().length === 0 && !isTypeableCombobox) {\n          stopEvent(event);\n        }\n        const els = getTabbableElements();\n        const target = getTarget(event);\n        if (orderRef.current[0] === 'reference' && target === domReference) {\n          stopEvent(event);\n          if (event.shiftKey) {\n            enqueueFocus(els[els.length - 1]);\n          } else {\n            enqueueFocus(els[1]);\n          }\n        }\n        if (orderRef.current[1] === 'floating' && target === floating && event.shiftKey) {\n          stopEvent(event);\n          enqueueFocus(els[0]);\n        }\n      }\n    }\n    const doc = getDocument(floating);\n    doc.addEventListener('keydown', onKeyDown);\n    return () => {\n      doc.removeEventListener('keydown', onKeyDown);\n    };\n  }, [domReference, floating, modal, orderRef, refs, isTypeableCombobox, getTabbableContent, getTabbableElements]);\n  React.useEffect(() => {\n    if (!closeOnFocusOut) {\n      return;\n    }\n\n    // In Safari, buttons lose focus when pressing them.\n    function handlePointerDown() {\n      isPointerDownRef.current = true;\n      setTimeout(() => {\n        isPointerDownRef.current = false;\n      });\n    }\n    function handleFocusOutside(event) {\n      const relatedTarget = event.relatedTarget;\n      const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute('data-floating-ui-focus-guard') || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {\n        var _node$context, _node$context2;\n        return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);\n      }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {\n        var _node$context3, _node$context4;\n        return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;\n      })));\n\n      // Focus did not move inside the floating tree, and there are no tabbable\n      // portal guards to handle closing.\n      if (relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&\n      // Fix React 18 Strict Mode returnFocus due to double rendering.\n      relatedTarget !== previouslyFocusedElementRef.current) {\n        preventReturnFocusRef.current = true;\n        // On iOS VoiceOver, dismissing the nested submenu will cause the\n        // first item of the list to receive focus. Delaying it appears to fix\n        // the issue.\n        setTimeout(() => onOpenChange(false));\n      }\n    }\n    if (floating && isHTMLElement(domReference)) {\n      domReference.addEventListener('focusout', handleFocusOutside);\n      domReference.addEventListener('pointerdown', handlePointerDown);\n      !modal && floating.addEventListener('focusout', handleFocusOutside);\n      return () => {\n        domReference.removeEventListener('focusout', handleFocusOutside);\n        domReference.removeEventListener('pointerdown', handlePointerDown);\n        !modal && floating.removeEventListener('focusout', handleFocusOutside);\n      };\n    }\n  }, [domReference, floating, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut]);\n  React.useEffect(() => {\n    var _portalContext$portal;\n    // Don't hide portals nested within the parent portal.\n    const portalNodes = Array.from((portalContext == null ? void 0 : (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll('[data-floating-ui-portal]')) || []);\n    function getDismissButtons() {\n      return [startDismissButtonRef.current, endDismissButtonRef.current].filter(Boolean);\n    }\n    if (floating && modal) {\n      const insideNodes = [floating, ...portalNodes, ...getDismissButtons()];\n      const cleanup = hideOthers(orderRef.current.includes('reference') || isTypeableCombobox ? insideNodes.concat(domReference || []) : insideNodes);\n      return () => {\n        cleanup();\n      };\n    }\n  }, [domReference, floating, modal, orderRef, portalContext, isTypeableCombobox]);\n  React.useEffect(() => {\n    if (modal && !guards && floating) {\n      const tabIndexValues = [];\n      const options = getTabbableOptions();\n      const allTabbable = tabbable(getDocument(floating).body, options);\n      const floatingTabbable = getTabbableElements();\n\n      // Exclude all tabbable elements that are part of the order\n      const elements = allTabbable.filter(el => !floatingTabbable.includes(el));\n      elements.forEach((el, i) => {\n        tabIndexValues[i] = el.getAttribute('tabindex');\n        el.setAttribute('tabindex', '-1');\n      });\n      return () => {\n        elements.forEach((el, i) => {\n          const value = tabIndexValues[i];\n          if (value == null) {\n            el.removeAttribute('tabindex');\n          } else {\n            el.setAttribute('tabindex', value);\n          }\n        });\n      };\n    }\n  }, [floating, modal, guards, getTabbableElements]);\n  index(() => {\n    if (!floating) return;\n    const doc = getDocument(floating);\n    let returnFocusValue = returnFocus;\n    let preventReturnFocusScroll = false;\n    const previouslyFocusedElement = activeElement$1(doc);\n    const contextData = dataRef.current;\n    previouslyFocusedElementRef.current = previouslyFocusedElement;\n    const focusableElements = getTabbableElements(floating);\n    const elToFocus = (typeof initialFocus === 'number' ? focusableElements[initialFocus] : initialFocus.current) || floating;\n\n    // If the `useListNavigation` hook is active, always ignore `initialFocus`\n    // because it has its own handling of the initial focus.\n    !ignoreInitialFocus && enqueueFocus(elToFocus, {\n      preventScroll: elToFocus === floating\n    });\n\n    // Dismissing via outside press should always ignore `returnFocus` to\n    // prevent unwanted scrolling.\n    function onDismiss(payload) {\n      if (payload.type === 'escapeKey' && refs.domReference.current) {\n        previouslyFocusedElementRef.current = refs.domReference.current;\n      }\n      if (['referencePress', 'escapeKey'].includes(payload.type)) {\n        return;\n      }\n      const returnFocus = payload.data.returnFocus;\n      if (typeof returnFocus === 'object') {\n        returnFocusValue = true;\n        preventReturnFocusScroll = returnFocus.preventScroll;\n      } else {\n        returnFocusValue = returnFocus;\n      }\n    }\n    events.on('dismiss', onDismiss);\n    return () => {\n      events.off('dismiss', onDismiss);\n      if (contains(floating, activeElement$1(doc)) && refs.domReference.current) {\n        previouslyFocusedElementRef.current = refs.domReference.current;\n      }\n      if (returnFocusValue && isHTMLElement(previouslyFocusedElementRef.current) && !preventReturnFocusRef.current) {\n        // `isPointerDownRef.current` to avoid the focus ring from appearing on\n        // the reference element when click-toggling it.\n        if (!refs.domReference.current || isPointerDownRef.current) {\n          enqueueFocus(previouslyFocusedElementRef.current, {\n            // When dismissing nested floating elements, by the time the rAF has\n            // executed, the menus will all have been unmounted. When they try\n            // to get focused, the calls get ignored — leaving the root\n            // reference focused as desired.\n            cancelPrevious: false,\n            preventScroll: preventReturnFocusScroll\n          });\n        } else {\n          var _previouslyFocusedEle;\n          // If the user has specified a `keydown` listener that calls\n          // setOpen(false) (e.g. selecting an item and closing the floating\n          // element), then sync return focus causes `useClick` to immediately\n          // re-open it, unless they call `event.preventDefault()` in the\n          // `keydown` listener. This helps keep backwards compatibility with\n          // older examples.\n          contextData.__syncReturnFocus = true;\n\n          // In Safari, `useListNavigation` moves focus sync, so making this\n          // sync ensures the initial item remains focused despite this being\n          // invoked in Strict Mode due to double-invoked useEffects. This also\n          // has the positive side effect of closing a modally focus-managed\n          // <Menu> on `Tab` keydown to move naturally to the next focusable\n          // element.\n          (_previouslyFocusedEle = previouslyFocusedElementRef.current) == null ? void 0 : _previouslyFocusedEle.focus({\n            preventScroll: preventReturnFocusScroll\n          });\n          setTimeout(() => {\n            // This isn't an actual property the user should access, make sure\n            // it doesn't persist.\n            delete contextData.__syncReturnFocus;\n          });\n        }\n      }\n    };\n  }, [floating, getTabbableElements, initialFocus, returnFocus, dataRef, refs, events, ignoreInitialFocus]);\n\n  // Synchronize the `context` & `modal` value to the FloatingPortal context.\n  // It will decide whether or not it needs to render its own guards.\n  index(() => {\n    if (!portalContext) return;\n    portalContext.setFocusManagerState({\n      ...context,\n      modal,\n      closeOnFocusOut\n      // Not concerned about the <RT> generic type.\n    });\n\n    return () => {\n      portalContext.setFocusManagerState(null);\n    };\n  }, [portalContext, modal, closeOnFocusOut, context]);\n  index(() => {\n    if (ignoreInitialFocus || !floating) return;\n    function setState() {\n      setTabbableContentLength(getTabbableContent().length);\n    }\n    setState();\n    if (typeof MutationObserver === 'function') {\n      const observer = new MutationObserver(setState);\n      observer.observe(floating, {\n        childList: true,\n        subtree: true\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [floating, getTabbableContent, ignoreInitialFocus, refs]);\n  const shouldRenderGuards = guards && (isInsidePortal || modal) && !isTypeableCombobox;\n  function renderDismissButton(location) {\n    return visuallyHiddenDismiss && modal ? /*#__PURE__*/React.createElement(VisuallyHiddenDismiss, {\n      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,\n      onClick: () => onOpenChange(false)\n    }, typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss') : null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,\n    onFocus: event => {\n      if (modal) {\n        const els = getTabbableElements();\n        enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        preventReturnFocusRef.current = false;\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const nextTabbable = getNextTabbable() || domReference;\n          nextTabbable == null ? void 0 : nextTabbable.focus();\n        } else {\n          var _portalContext$before;\n          (_portalContext$before = portalContext.beforeOutsideRef.current) == null ? void 0 : _portalContext$before.focus();\n        }\n      }\n    }\n  }), isTypeableCombobox ? null : renderDismissButton('start'), /*#__PURE__*/React.cloneElement(children, tabbableContentLength === 0 || order.includes('floating') ? {\n    tabIndex: 0\n  } : {}), renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.afterInsideRef,\n    onFocus: event => {\n      if (modal) {\n        enqueueFocus(getTabbableElements()[0]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        preventReturnFocusRef.current = true;\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const prevTabbable = getPreviousTabbable() || domReference;\n          prevTabbable == null ? void 0 : prevTabbable.focus();\n        } else {\n          var _portalContext$afterO;\n          (_portalContext$afterO = portalContext.afterOutsideRef.current) == null ? void 0 : _portalContext$afterO.focus();\n        }\n      }\n    }\n  }));\n}\n\nconst identifier = 'data-floating-ui-scroll-lock';\n\n/**\n * Provides base styling for a fixed overlay element to dim content or block\n * pointer events behind a floating element.\n * It's a regular `<div>`, so it can be styled via any CSS solution you prefer.\n * @see https://floating-ui.com/docs/FloatingOverlay\n */\nconst FloatingOverlay = /*#__PURE__*/React.forwardRef(function FloatingOverlay(_ref, ref) {\n  let {\n    lockScroll = false,\n    ...rest\n  } = _ref;\n  index(() => {\n    var _window$visualViewpor, _window$visualViewpor2;\n    if (!lockScroll) {\n      return;\n    }\n    const alreadyLocked = document.body.hasAttribute(identifier);\n    if (alreadyLocked) {\n      return;\n    }\n    document.body.setAttribute(identifier, '');\n\n    // RTL <body> scrollbar\n    const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;\n    const paddingProp = scrollbarX ? 'paddingLeft' : 'paddingRight';\n    const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n\n    // Only iOS doesn't respect `overflow: hidden` on document.body, and this\n    // technique has fewer side effects.\n    if (!/iP(hone|ad|od)|iOS/.test(getPlatform())) {\n      Object.assign(document.body.style, {\n        overflow: 'hidden',\n        [paddingProp]: scrollbarWidth + \"px\"\n      });\n      return () => {\n        document.body.removeAttribute(identifier);\n        Object.assign(document.body.style, {\n          overflow: '',\n          [paddingProp]: ''\n        });\n      };\n    }\n\n    // iOS 12 does not support `visualViewport`.\n    const offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0;\n    const offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0;\n    const scrollX = window.pageXOffset;\n    const scrollY = window.pageYOffset;\n    Object.assign(document.body.style, {\n      position: 'fixed',\n      overflow: 'hidden',\n      top: -(scrollY - Math.floor(offsetTop)) + \"px\",\n      left: -(scrollX - Math.floor(offsetLeft)) + \"px\",\n      right: '0',\n      [paddingProp]: scrollbarWidth + \"px\"\n    });\n    return () => {\n      Object.assign(document.body.style, {\n        position: '',\n        overflow: '',\n        top: '',\n        left: '',\n        right: '',\n        [paddingProp]: ''\n      });\n      document.body.removeAttribute(identifier);\n      window.scrollTo(scrollX, scrollY);\n    };\n  }, [lockScroll]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, rest, {\n    style: {\n      position: 'fixed',\n      overflow: 'auto',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      ...rest.style\n    }\n  }));\n});\n\nfunction isButtonTarget(event) {\n  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';\n}\nfunction isSpaceIgnored(element) {\n  return isTypeableElement(element);\n}\n/**\n * Opens or closes the floating element when clicking the reference element.\n * @see https://floating-ui.com/docs/useClick\n */\nconst useClick = function (_ref, _temp) {\n  let {\n    open,\n    onOpenChange,\n    dataRef,\n    elements: {\n      domReference\n    }\n  } = _ref;\n  let {\n    enabled = true,\n    event: eventOption = 'click',\n    toggle = true,\n    ignoreMouse = false,\n    keyboardHandlers = true\n  } = _temp === void 0 ? {} : _temp;\n  const pointerTypeRef = React.useRef();\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onPointerDown(event) {\n          pointerTypeRef.current = event.pointerType;\n        },\n        onMouseDown(event) {\n          // Ignore all buttons except for the \"main\" button.\n          // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n          if (event.button !== 0) {\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (eventOption === 'click') {\n            return;\n          }\n          if (open) {\n            if (toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'mousedown' : true)) {\n              onOpenChange(false);\n            }\n          } else {\n            // Prevent stealing focus from the floating element\n            event.preventDefault();\n            onOpenChange(true);\n          }\n          dataRef.current.openEvent = event.nativeEvent;\n        },\n        onClick(event) {\n          if (dataRef.current.__syncReturnFocus) {\n            return;\n          }\n          if (eventOption === 'mousedown' && pointerTypeRef.current) {\n            pointerTypeRef.current = undefined;\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (open) {\n            if (toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'click' : true)) {\n              onOpenChange(false);\n            }\n          } else {\n            onOpenChange(true);\n          }\n          dataRef.current.openEvent = event.nativeEvent;\n        },\n        onKeyDown(event) {\n          pointerTypeRef.current = undefined;\n          if (!keyboardHandlers) {\n            return;\n          }\n          if (isButtonTarget(event)) {\n            return;\n          }\n          if (event.key === ' ' && !isSpaceIgnored(domReference)) {\n            // Prevent scrolling\n            event.preventDefault();\n          }\n          if (event.key === 'Enter') {\n            if (open) {\n              if (toggle) {\n                onOpenChange(false);\n              }\n            } else {\n              onOpenChange(true);\n            }\n          }\n        },\n        onKeyUp(event) {\n          if (!keyboardHandlers) {\n            return;\n          }\n          if (isButtonTarget(event) || isSpaceIgnored(domReference)) {\n            return;\n          }\n          if (event.key === ' ') {\n            if (open) {\n              if (toggle) {\n                onOpenChange(false);\n              }\n            } else {\n              onOpenChange(true);\n            }\n          }\n        }\n      }\n    };\n  }, [enabled, dataRef, eventOption, ignoreMouse, keyboardHandlers, domReference, toggle, open, onOpenChange]);\n};\n\n/**\n * Check whether the event.target is within the provided node. Uses event.composedPath if available for custom element support.\n *\n * @param event The event whose target/composedPath to check\n * @param node The node to check against\n * @returns Whether the event.target/composedPath is within the node.\n */\nfunction isEventTargetWithin(event, node) {\n  if (node == null) {\n    return false;\n  }\n  if ('composedPath' in event) {\n    return event.composedPath().includes(node);\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't\n  const e = event;\n  return e.target != null && node.contains(e.target);\n}\n\nconst bubbleHandlerKeys = {\n  pointerdown: 'onPointerDown',\n  mousedown: 'onMouseDown',\n  click: 'onClick'\n};\nconst captureHandlerKeys = {\n  pointerdown: 'onPointerDownCapture',\n  mousedown: 'onMouseDownCapture',\n  click: 'onClickCapture'\n};\nconst normalizeBubblesProp = function (bubbles) {\n  var _bubbles$escapeKey, _bubbles$outsidePress;\n  if (bubbles === void 0) {\n    bubbles = true;\n  }\n  return {\n    escapeKeyBubbles: typeof bubbles === 'boolean' ? bubbles : (_bubbles$escapeKey = bubbles.escapeKey) != null ? _bubbles$escapeKey : true,\n    outsidePressBubbles: typeof bubbles === 'boolean' ? bubbles : (_bubbles$outsidePress = bubbles.outsidePress) != null ? _bubbles$outsidePress : true\n  };\n};\n/**\n * Closes the floating element when a dismissal is requested — by default, when\n * the user presses the `escape` key or outside of the floating element.\n * @see https://floating-ui.com/docs/useDismiss\n */\nconst useDismiss = function (_ref, _temp) {\n  let {\n    open,\n    onOpenChange,\n    events,\n    nodeId,\n    elements: {\n      reference,\n      domReference,\n      floating\n    },\n    dataRef\n  } = _ref;\n  let {\n    enabled = true,\n    escapeKey = true,\n    outsidePress: unstable_outsidePress = true,\n    outsidePressEvent = 'pointerdown',\n    referencePress = false,\n    referencePressEvent = 'pointerdown',\n    ancestorScroll = false,\n    bubbles = true\n  } = _temp === void 0 ? {} : _temp;\n  const tree = useFloatingTree();\n  const nested = useFloatingParentNodeId() != null;\n  const outsidePressFn = useEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);\n  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;\n  const insideReactTreeRef = React.useRef(false);\n  const {\n    escapeKeyBubbles,\n    outsidePressBubbles\n  } = normalizeBubblesProp(bubbles);\n  React.useEffect(() => {\n    if (!open || !enabled) {\n      return;\n    }\n    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;\n    dataRef.current.__outsidePressBubbles = outsidePressBubbles;\n    function onKeyDown(event) {\n      if (event.key === 'Escape') {\n        const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n        if (children.length > 0) {\n          let shouldDismiss = true;\n          children.forEach(child => {\n            var _child$context;\n            if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {\n              shouldDismiss = false;\n              return;\n            }\n          });\n          if (!shouldDismiss) {\n            return;\n          }\n        }\n        events.emit('dismiss', {\n          type: 'escapeKey',\n          data: {\n            returnFocus: {\n              preventScroll: false\n            }\n          }\n        });\n        onOpenChange(false);\n      }\n    }\n    function onOutsidePress(event) {\n      // Given developers can stop the propagation of the synthetic event,\n      // we can only be confident with a positive value.\n      const insideReactTree = insideReactTreeRef.current;\n      insideReactTreeRef.current = false;\n      if (insideReactTree) {\n        return;\n      }\n      if (typeof outsidePress === 'function' && !outsidePress(event)) {\n        return;\n      }\n      const target = getTarget(event);\n\n      // Check if the click occurred on the scrollbar\n      if (isHTMLElement(target) && floating) {\n        const win = floating.ownerDocument.defaultView || window;\n        const canScrollX = target.scrollWidth > target.clientWidth;\n        const canScrollY = target.scrollHeight > target.clientHeight;\n        let xCond = canScrollY && event.offsetX > target.clientWidth;\n\n        // In some browsers it is possible to change the <body> (or window)\n        // scrollbar to the left side, but is very rare and is difficult to\n        // check for. Plus, for modal dialogs with backdrops, it is more\n        // important that the backdrop is checked but not so much the window.\n        if (canScrollY) {\n          const isRTL = win.getComputedStyle(target).direction === 'rtl';\n          if (isRTL) {\n            xCond = event.offsetX <= target.offsetWidth - target.clientWidth;\n          }\n        }\n        if (xCond || canScrollX && event.offsetY > target.clientHeight) {\n          return;\n        }\n      }\n      const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n        var _node$context;\n        return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);\n      });\n      if (isEventTargetWithin(event, floating) || isEventTargetWithin(event, domReference) || targetIsInsideChildren) {\n        return;\n      }\n      const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n      if (children.length > 0) {\n        let shouldDismiss = true;\n        children.forEach(child => {\n          var _child$context2;\n          if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {\n            shouldDismiss = false;\n            return;\n          }\n        });\n        if (!shouldDismiss) {\n          return;\n        }\n      }\n      events.emit('dismiss', {\n        type: 'outsidePress',\n        data: {\n          returnFocus: nested ? {\n            preventScroll: true\n          } : isVirtualClick(event) || isVirtualPointerEvent(event)\n        }\n      });\n      onOpenChange(false);\n    }\n    function onScroll() {\n      onOpenChange(false);\n    }\n    const doc = getDocument(floating);\n    escapeKey && doc.addEventListener('keydown', onKeyDown);\n    outsidePress && doc.addEventListener(outsidePressEvent, onOutsidePress);\n    let ancestors = [];\n    if (ancestorScroll) {\n      if (isElement(domReference)) {\n        ancestors = getOverflowAncestors(domReference);\n      }\n      if (isElement(floating)) {\n        ancestors = ancestors.concat(getOverflowAncestors(floating));\n      }\n      if (!isElement(reference) && reference && reference.contextElement) {\n        ancestors = ancestors.concat(getOverflowAncestors(reference.contextElement));\n      }\n    }\n\n    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)\n    ancestors = ancestors.filter(ancestor => {\n      var _doc$defaultView;\n      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);\n    });\n    ancestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n    });\n    return () => {\n      escapeKey && doc.removeEventListener('keydown', onKeyDown);\n      outsidePress && doc.removeEventListener(outsidePressEvent, onOutsidePress);\n      ancestors.forEach(ancestor => {\n        ancestor.removeEventListener('scroll', onScroll);\n      });\n    };\n  }, [dataRef, floating, domReference, reference, escapeKey, outsidePress, outsidePressEvent, events, tree, nodeId, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, nested]);\n  React.useEffect(() => {\n    insideReactTreeRef.current = false;\n  }, [outsidePress, outsidePressEvent]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        [bubbleHandlerKeys[referencePressEvent]]: () => {\n          if (referencePress) {\n            events.emit('dismiss', {\n              type: 'referencePress',\n              data: {\n                returnFocus: false\n              }\n            });\n            onOpenChange(false);\n          }\n        }\n      },\n      floating: {\n        [captureHandlerKeys[outsidePressEvent]]: () => {\n          insideReactTreeRef.current = true;\n        }\n      }\n    };\n  }, [enabled, events, referencePress, outsidePressEvent, referencePressEvent, onOpenChange]);\n};\n\n/**\n * Opens the floating element while the reference element has focus, like CSS\n * `:focus`.\n * @see https://floating-ui.com/docs/useFocus\n */\nconst useFocus = function (_ref, _temp) {\n  let {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    refs,\n    elements: {\n      floating,\n      domReference\n    }\n  } = _ref;\n  let {\n    enabled = true,\n    keyboardOnly = true\n  } = _temp === void 0 ? {} : _temp;\n  const pointerTypeRef = React.useRef('');\n  const blockFocusRef = React.useRef(false);\n  const timeoutRef = React.useRef();\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    const doc = getDocument(floating);\n    const win = doc.defaultView || window;\n\n    // If the reference was focused and the user left the tab/window, and the\n    // floating element was not open, the focus should be blocked when they\n    // return to the tab/window.\n    function onBlur() {\n      if (!open && isHTMLElement(domReference) && domReference === activeElement$1(getDocument(domReference))) {\n        blockFocusRef.current = true;\n      }\n    }\n    win.addEventListener('blur', onBlur);\n    return () => {\n      win.removeEventListener('blur', onBlur);\n    };\n  }, [floating, domReference, open, enabled]);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onDismiss(payload) {\n      if (payload.type === 'referencePress' || payload.type === 'escapeKey') {\n        blockFocusRef.current = true;\n      }\n    }\n    events.on('dismiss', onDismiss);\n    return () => {\n      events.off('dismiss', onDismiss);\n    };\n  }, [events, enabled]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onPointerDown(_ref2) {\n          let {\n            pointerType\n          } = _ref2;\n          pointerTypeRef.current = pointerType;\n          blockFocusRef.current = !!(pointerType && keyboardOnly);\n        },\n        onMouseLeave() {\n          blockFocusRef.current = false;\n        },\n        onFocus(event) {\n          var _dataRef$current$open;\n          if (blockFocusRef.current) {\n            return;\n          }\n\n          // Dismiss with click should ignore the subsequent `focus` trigger,\n          // but only if the click originated inside the reference element.\n          if (event.type === 'focus' && ((_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type) === 'mousedown' && dataRef.current.openEvent && isEventTargetWithin(dataRef.current.openEvent, domReference)) {\n            return;\n          }\n          dataRef.current.openEvent = event.nativeEvent;\n          onOpenChange(true);\n        },\n        onBlur(event) {\n          blockFocusRef.current = false;\n          const relatedTarget = event.relatedTarget;\n\n          // Hit the non-modal focus management portal guard. Focus will be\n          // moved into the floating element immediately after.\n          const movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute('data-floating-ui-focus-guard') && relatedTarget.getAttribute('data-type') === 'outside';\n\n          // Wait for the window blur listener to fire.\n          timeoutRef.current = setTimeout(() => {\n            // When focusing the reference element (e.g. regular click), then\n            // clicking into the floating element, prevent it from hiding.\n            // Note: it must be focusable, e.g. `tabindex=\"-1\"`.\n            if (contains(refs.floating.current, relatedTarget) || contains(domReference, relatedTarget) || movedToFocusGuard) {\n              return;\n            }\n            onOpenChange(false);\n          });\n        }\n      }\n    };\n  }, [enabled, keyboardOnly, domReference, refs, dataRef, onOpenChange]);\n};\n\nlet isPreventScrollSupported = false;\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nfunction isDifferentRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction findNonDisabledIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  const list = listRef.current;\n  let index = startingIndex;\n  do {\n    var _list$index, _list$index2;\n    index = index + (decrement ? -amount : amount);\n  } while (index >= 0 && index <= list.length - 1 && (disabledIndices ? disabledIndices.includes(index) : list[index] == null || ((_list$index = list[index]) == null ? void 0 : _list$index.hasAttribute('disabled')) || ((_list$index2 = list[index]) == null ? void 0 : _list$index2.getAttribute('aria-disabled')) === 'true'));\n  return index;\n}\nfunction doSwitch(orientation, vertical, horizontal) {\n  switch (orientation) {\n    case 'vertical':\n      return vertical;\n    case 'horizontal':\n      return horizontal;\n    default:\n      return vertical || horizontal;\n  }\n}\nfunction isMainOrientationKey(key, orientation) {\n  const vertical = key === ARROW_UP || key === ARROW_DOWN;\n  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isMainOrientationToEndKey(key, orientation, rtl) {\n  const vertical = key === ARROW_DOWN;\n  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key == ' ' || key === '';\n}\nfunction isCrossOrientationOpenKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  const horizontal = key === ARROW_DOWN;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isCrossOrientationCloseKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;\n  const horizontal = key === ARROW_UP;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction getMinIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\n/**\n * Adds arrow key-based navigation of a list of items, either using real DOM\n * focus or virtual focus.\n * @see https://floating-ui.com/docs/useListNavigation\n */\nconst useListNavigation = function (_ref, _temp2) {\n  let {\n    open,\n    onOpenChange,\n    refs,\n    elements: {\n      domReference\n    }\n  } = _ref;\n  let {\n    listRef,\n    activeIndex,\n    onNavigate: unstable_onNavigate = () => {},\n    enabled = true,\n    selectedIndex = null,\n    allowEscape = false,\n    loop = false,\n    nested = false,\n    rtl = false,\n    virtual = false,\n    focusItemOnOpen = 'auto',\n    focusItemOnHover = true,\n    openOnArrowKeyDown = true,\n    disabledIndices = undefined,\n    orientation = 'vertical',\n    cols = 1,\n    scrollItemIntoView = true\n  } = _temp2 === void 0 ? {\n    listRef: {\n      current: []\n    },\n    activeIndex: null,\n    onNavigate: () => {}\n  } : _temp2;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (allowEscape) {\n      if (!loop) {\n        console.warn(['Floating UI: `useListNavigation` looping must be enabled to allow', 'escaping.'].join(' '));\n      }\n      if (!virtual) {\n        console.warn(['Floating UI: `useListNavigation` must be virtual to allow', 'escaping.'].join(' '));\n      }\n    }\n    if (orientation === 'vertical' && cols > 1) {\n      console.warn(['Floating UI: In grid list navigation mode (`cols` > 1), the', '`orientation` should be either \"horizontal\" or \"both\".'].join(' '));\n    }\n  }\n  const parentId = useFloatingParentNodeId();\n  const tree = useFloatingTree();\n  const onNavigate = useEvent(unstable_onNavigate);\n  const focusItemOnOpenRef = React.useRef(focusItemOnOpen);\n  const indexRef = React.useRef(selectedIndex != null ? selectedIndex : -1);\n  const keyRef = React.useRef(null);\n  const isPointerModalityRef = React.useRef(true);\n  const previousOnNavigateRef = React.useRef(onNavigate);\n  const previousOpenRef = React.useRef(open);\n  const forceSyncFocus = React.useRef(false);\n  const forceScrollIntoViewRef = React.useRef(false);\n  const disabledIndicesRef = useLatestRef(disabledIndices);\n  const latestOpenRef = useLatestRef(open);\n  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);\n  const [activeId, setActiveId] = React.useState();\n  const focusItem = React.useCallback(function (listRef, indexRef, forceScrollIntoView) {\n    if (forceScrollIntoView === void 0) {\n      forceScrollIntoView = false;\n    }\n    const item = listRef.current[indexRef.current];\n    if (virtual) {\n      setActiveId(item == null ? void 0 : item.id);\n    } else {\n      enqueueFocus(item, {\n        preventScroll: true,\n        // Mac Safari does not move the virtual cursor unless the focus call\n        // is sync. However, for the very first focus call, we need to wait\n        // for the position to be ready in order to prevent unwanted\n        // scrolling. This means the virtual cursor will not move to the first\n        // item when first opening the floating element, but will on\n        // subsequent calls. `preventScroll` is supported in modern Safari,\n        // so we can use that instead.\n        // iOS Safari must be async or the first item will not be focused.\n        sync: isMac() && isSafari() ? isPreventScrollSupported || forceSyncFocus.current : false\n      });\n    }\n    requestAnimationFrame(() => {\n      const scrollIntoViewOptions = scrollItemIntoViewRef.current;\n      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoView || !isPointerModalityRef.current);\n      if (shouldScrollIntoView) {\n        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported\n        // by all browsers.\n        item.scrollIntoView == null ? void 0 : item.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {\n          block: 'nearest',\n          inline: 'nearest'\n        } : scrollIntoViewOptions);\n      }\n    });\n  }, [virtual, scrollItemIntoViewRef]);\n  index(() => {\n    document.createElement('div').focus({\n      get preventScroll() {\n        isPreventScrollSupported = true;\n        return false;\n      }\n    });\n  }, []);\n\n  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating\n  // element. Also, reset `activeIndex` upon closing the floating element.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open) {\n      if (focusItemOnOpenRef.current && selectedIndex != null) {\n        // Regardless of the pointer modality, we want to ensure the selected\n        // item comes into view when the floating element is opened.\n        forceScrollIntoViewRef.current = true;\n        onNavigate(selectedIndex);\n      }\n    } else if (previousOpenRef.current) {\n      // Since the user can specify `onNavigate` conditionally\n      // (onNavigate: open ? setActiveIndex : setSelectedIndex),\n      // we store and call the previous function.\n      indexRef.current = -1;\n      previousOnNavigateRef.current(null);\n    }\n  }, [enabled, open, selectedIndex, onNavigate]);\n\n  // Sync `activeIndex` to be the focused item while the floating element is\n  // open.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open) {\n      if (activeIndex == null) {\n        forceSyncFocus.current = false;\n        if (selectedIndex != null) {\n          return;\n        }\n\n        // Reset while the floating element was open (e.g. the list changed).\n        if (previousOpenRef.current) {\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n        }\n\n        // Initial sync.\n        if (!previousOpenRef.current && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {\n          indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);\n          onNavigate(indexRef.current);\n        }\n      } else if (!isIndexOutOfBounds(listRef, activeIndex)) {\n        indexRef.current = activeIndex;\n        focusItem(listRef, indexRef, forceScrollIntoViewRef.current);\n        forceScrollIntoViewRef.current = false;\n      }\n    }\n  }, [enabled, open, activeIndex, selectedIndex, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);\n\n  // Ensure the parent floating element has focus when a nested child closes\n  // to allow arrow key navigation to work after the pointer leaves the child.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (previousOpenRef.current && !open) {\n      var _tree$nodesRef$curren, _tree$nodesRef$curren2;\n      const parentFloating = tree == null ? void 0 : (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null ? void 0 : (_tree$nodesRef$curren2 = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren2.elements.floating;\n      if (parentFloating && !contains(parentFloating, activeElement$1(getDocument(parentFloating)))) {\n        parentFloating.focus({\n          preventScroll: true\n        });\n      }\n    }\n  }, [enabled, open, tree, parentId]);\n  index(() => {\n    keyRef.current = null;\n    previousOnNavigateRef.current = onNavigate;\n    previousOpenRef.current = open;\n  });\n  const hasActiveIndex = activeIndex != null;\n  const item = React.useMemo(() => {\n    function syncCurrentTarget(currentTarget) {\n      if (!open) return;\n      const index = listRef.current.indexOf(currentTarget);\n      if (index !== -1) {\n        onNavigate(index);\n      }\n    }\n    const props = {\n      onFocus(_ref2) {\n        let {\n          currentTarget\n        } = _ref2;\n        syncCurrentTarget(currentTarget);\n      },\n      onClick: _ref3 => {\n        let {\n          currentTarget\n        } = _ref3;\n        return currentTarget.focus({\n          preventScroll: true\n        });\n      },\n      // Safari\n      ...(focusItemOnHover && {\n        onMouseMove(_ref4) {\n          let {\n            currentTarget\n          } = _ref4;\n          syncCurrentTarget(currentTarget);\n        },\n        onPointerLeave() {\n          if (!isPointerModalityRef.current) {\n            return;\n          }\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n\n          // Virtual cursor with VoiceOver on iOS needs this to be flushed\n          // synchronously or there is a glitch that prevents nested\n          // submenus from being accessible.\n          flushSync(() => onNavigate(null));\n          if (!virtual) {\n            var _refs$floating$curren;\n            // This also needs to be sync to prevent fast mouse movements\n            // from leaving behind a stale active item when landing on a\n            // disabled button item.\n            (_refs$floating$curren = refs.floating.current) == null ? void 0 : _refs$floating$curren.focus({\n              preventScroll: true\n            });\n          }\n        }\n      })\n    };\n    return props;\n  }, [open, refs, focusItem, focusItemOnHover, listRef, onNavigate, virtual]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    const disabledIndices = disabledIndicesRef.current;\n    function onKeyDown(event) {\n      isPointerModalityRef.current = false;\n      forceSyncFocus.current = true;\n\n      // If the floating element is animating out, ignore navigation. Otherwise,\n      // the `activeIndex` gets set to 0 despite not being open so the next time\n      // the user ArrowDowns, the first item won't be focused.\n      if (!latestOpenRef.current && event.currentTarget === refs.floating.current) {\n        return;\n      }\n      if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {\n        stopEvent(event);\n        onOpenChange(false);\n        if (isHTMLElement(domReference)) {\n          domReference.focus();\n        }\n        return;\n      }\n      const currentIndex = indexRef.current;\n      const minIndex = getMinIndex(listRef, disabledIndices);\n      const maxIndex = getMaxIndex(listRef, disabledIndices);\n      if (event.key === 'Home') {\n        indexRef.current = minIndex;\n        onNavigate(indexRef.current);\n      }\n      if (event.key === 'End') {\n        indexRef.current = maxIndex;\n        onNavigate(indexRef.current);\n      }\n\n      // Grid navigation.\n      if (cols > 1) {\n        const prevIndex = indexRef.current;\n        if (event.key === ARROW_UP) {\n          stopEvent(event);\n          if (prevIndex === -1) {\n            indexRef.current = maxIndex;\n          } else {\n            indexRef.current = findNonDisabledIndex(listRef, {\n              startingIndex: prevIndex,\n              amount: cols,\n              decrement: true,\n              disabledIndices\n            });\n            if (loop && (prevIndex - cols < minIndex || indexRef.current < 0)) {\n              const col = prevIndex % cols;\n              const maxCol = maxIndex % cols;\n              const offset = maxIndex - (maxCol - col);\n              if (maxCol === col) {\n                indexRef.current = maxIndex;\n              } else {\n                indexRef.current = maxCol > col ? offset : offset - cols;\n              }\n            }\n          }\n          if (isIndexOutOfBounds(listRef, indexRef.current)) {\n            indexRef.current = prevIndex;\n          }\n          onNavigate(indexRef.current);\n        }\n        if (event.key === ARROW_DOWN) {\n          stopEvent(event);\n          if (prevIndex === -1) {\n            indexRef.current = minIndex;\n          } else {\n            indexRef.current = findNonDisabledIndex(listRef, {\n              startingIndex: prevIndex,\n              amount: cols,\n              disabledIndices\n            });\n            if (loop && prevIndex + cols > maxIndex) {\n              indexRef.current = findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex % cols - cols,\n                amount: cols,\n                disabledIndices\n              });\n            }\n          }\n          if (isIndexOutOfBounds(listRef, indexRef.current)) {\n            indexRef.current = prevIndex;\n          }\n          onNavigate(indexRef.current);\n        }\n\n        // Remains on the same row/column.\n        if (orientation === 'both') {\n          const prevRow = Math.floor(prevIndex / cols);\n          if (event.key === ARROW_RIGHT) {\n            stopEvent(event);\n            if (prevIndex % cols !== cols - 1) {\n              indexRef.current = findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex,\n                disabledIndices\n              });\n              if (loop && isDifferentRow(indexRef.current, cols, prevRow)) {\n                indexRef.current = findNonDisabledIndex(listRef, {\n                  startingIndex: prevIndex - prevIndex % cols - 1,\n                  disabledIndices\n                });\n              }\n            } else if (loop) {\n              indexRef.current = findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex - prevIndex % cols - 1,\n                disabledIndices\n              });\n            }\n            if (isDifferentRow(indexRef.current, cols, prevRow)) {\n              indexRef.current = prevIndex;\n            }\n          }\n          if (event.key === ARROW_LEFT) {\n            stopEvent(event);\n            if (prevIndex % cols !== 0) {\n              indexRef.current = findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex,\n                disabledIndices,\n                decrement: true\n              });\n              if (loop && isDifferentRow(indexRef.current, cols, prevRow)) {\n                indexRef.current = findNonDisabledIndex(listRef, {\n                  startingIndex: prevIndex + (cols - prevIndex % cols),\n                  decrement: true,\n                  disabledIndices\n                });\n              }\n            } else if (loop) {\n              indexRef.current = findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex + (cols - prevIndex % cols),\n                decrement: true,\n                disabledIndices\n              });\n            }\n            if (isDifferentRow(indexRef.current, cols, prevRow)) {\n              indexRef.current = prevIndex;\n            }\n          }\n          const lastRow = Math.floor(maxIndex / cols) === prevRow;\n          if (isIndexOutOfBounds(listRef, indexRef.current)) {\n            if (loop && lastRow) {\n              indexRef.current = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex - prevIndex % cols - 1,\n                disabledIndices\n              });\n            } else {\n              indexRef.current = prevIndex;\n            }\n          }\n          onNavigate(indexRef.current);\n          return;\n        }\n      }\n      if (isMainOrientationKey(event.key, orientation)) {\n        stopEvent(event);\n\n        // Reset the index if no item is focused.\n        if (open && !virtual && activeElement$1(event.currentTarget.ownerDocument) === event.currentTarget) {\n          indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;\n          onNavigate(indexRef.current);\n          return;\n        }\n        if (isMainOrientationToEndKey(event.key, orientation, rtl)) {\n          if (loop) {\n            indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            }));\n          }\n        } else {\n          if (loop) {\n            indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            }));\n          }\n        }\n        if (isIndexOutOfBounds(listRef, indexRef.current)) {\n          onNavigate(null);\n        } else {\n          onNavigate(indexRef.current);\n        }\n      }\n    }\n    function checkVirtualMouse(event) {\n      if (focusItemOnOpen === 'auto' && isVirtualClick(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    function checkVirtualPointer(event) {\n      // `pointerdown` fires first, reset the state then perform the checks.\n      focusItemOnOpenRef.current = focusItemOnOpen;\n      if (focusItemOnOpen === 'auto' && isVirtualPointerEvent(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    const ariaActiveDescendantProp = virtual && open && hasActiveIndex && {\n      'aria-activedescendant': activeId\n    };\n    return {\n      reference: {\n        ...ariaActiveDescendantProp,\n        onKeyDown(event) {\n          isPointerModalityRef.current = false;\n          const isArrowKey = event.key.indexOf('Arrow') === 0;\n          if (virtual && open) {\n            return onKeyDown(event);\n          }\n\n          // If a floating element should not open on arrow key down, avoid\n          // setting `activeIndex` while it's closed.\n          if (!open && !openOnArrowKeyDown && isArrowKey) {\n            return;\n          }\n          const isNavigationKey = isArrowKey || event.key === 'Enter' || event.key === ' ' || event.key === '';\n          if (isNavigationKey) {\n            keyRef.current = event.key;\n          }\n          if (nested) {\n            if (isCrossOrientationOpenKey(event.key, orientation, rtl)) {\n              stopEvent(event);\n              if (open) {\n                indexRef.current = getMinIndex(listRef, disabledIndices);\n                onNavigate(indexRef.current);\n              } else {\n                onOpenChange(true);\n              }\n            }\n            return;\n          }\n          if (isMainOrientationKey(event.key, orientation)) {\n            if (selectedIndex != null) {\n              indexRef.current = selectedIndex;\n            }\n            stopEvent(event);\n            if (!open && openOnArrowKeyDown) {\n              onOpenChange(true);\n            } else {\n              onKeyDown(event);\n            }\n            if (open) {\n              onNavigate(indexRef.current);\n            }\n          }\n        },\n        onFocus() {\n          if (open) {\n            onNavigate(null);\n          }\n        },\n        onPointerDown: checkVirtualPointer,\n        onMouseDown: checkVirtualMouse,\n        onClick: checkVirtualMouse\n      },\n      floating: {\n        'aria-orientation': orientation === 'both' ? undefined : orientation,\n        ...ariaActiveDescendantProp,\n        onKeyDown,\n        onPointerMove() {\n          isPointerModalityRef.current = true;\n        }\n      },\n      item\n    };\n  }, [domReference, refs, activeId, disabledIndicesRef, latestOpenRef, listRef, enabled, orientation, rtl, virtual, open, hasActiveIndex, nested, selectedIndex, openOnArrowKeyDown, allowEscape, cols, loop, focusItemOnOpen, onNavigate, onOpenChange, item]);\n};\n\n/**\n * Merges an array of refs into a single memoized callback ref or `null`.\n * @see https://floating-ui.com/docs/useMergeRefs\n */\nfunction useMergeRefs(refs) {\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      refs.forEach(ref => {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref != null) {\n          ref.current = value;\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\n/**\n * Adds base screen reader props to the reference and floating elements for a\n * given floating element `role`.\n * @see https://floating-ui.com/docs/useRole\n */\nconst useRole = function (_ref, _temp) {\n  let {\n    open\n  } = _ref;\n  let {\n    enabled = true,\n    role = 'dialog'\n  } = _temp === void 0 ? {} : _temp;\n  const rootId = useId();\n  const referenceId = useId();\n  return React.useMemo(() => {\n    const floatingProps = {\n      id: rootId,\n      role\n    };\n    if (!enabled) {\n      return {};\n    }\n    if (role === 'tooltip') {\n      return {\n        reference: {\n          'aria-describedby': open ? rootId : undefined\n        },\n        floating: floatingProps\n      };\n    }\n    return {\n      reference: {\n        'aria-expanded': open ? 'true' : 'false',\n        'aria-haspopup': role === 'alertdialog' ? 'dialog' : role,\n        'aria-controls': open ? rootId : undefined,\n        ...(role === 'listbox' && {\n          role: 'combobox'\n        }),\n        ...(role === 'menu' && {\n          id: referenceId\n        })\n      },\n      floating: {\n        ...floatingProps,\n        ...(role === 'menu' && {\n          'aria-labelledby': referenceId\n        })\n      }\n    };\n  }, [enabled, role, open, rootId, referenceId]);\n};\n\n// Converts a JS style key like `backgroundColor` to a CSS transition-property\n// like `background-color`.\nconst camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());\nfunction useDelayUnmount(open, durationMs) {\n  const [isMounted, setIsMounted] = React.useState(open);\n  if (open && !isMounted) {\n    setIsMounted(true);\n  }\n  React.useEffect(() => {\n    if (!open) {\n      const timeout = setTimeout(() => setIsMounted(false), durationMs);\n      return () => clearTimeout(timeout);\n    }\n  }, [open, durationMs]);\n  return isMounted;\n}\n/**\n * Provides a status string to apply CSS transitions to a floating element,\n * correctly handling placement-aware transitions.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstatus\n */\nfunction useTransitionStatus(_ref, _temp) {\n  let {\n    open,\n    elements: {\n      floating\n    }\n  } = _ref;\n  let {\n    duration = 250\n  } = _temp === void 0 ? {} : _temp;\n  const isNumberDuration = typeof duration === 'number';\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [initiated, setInitiated] = React.useState(false);\n  const [status, setStatus] = React.useState('unmounted');\n  const isMounted = useDelayUnmount(open, closeDuration);\n\n  // `initiated` check prevents this `setState` call from breaking\n  // <FloatingPortal />. This call is necessary to ensure subsequent opens\n  // after the initial one allows the correct side animation to play when the\n  // placement has changed.\n  index(() => {\n    if (initiated && !isMounted) {\n      setStatus('unmounted');\n    }\n  }, [initiated, isMounted]);\n  index(() => {\n    if (!floating) return;\n    if (open) {\n      setStatus('initial');\n      const frame = requestAnimationFrame(() => {\n        setStatus('open');\n      });\n      return () => {\n        cancelAnimationFrame(frame);\n      };\n    } else {\n      setInitiated(true);\n      setStatus('close');\n    }\n  }, [open, floating]);\n  return {\n    isMounted,\n    status\n  };\n}\n/**\n * Provides styles to apply CSS transitions to a floating element, correctly\n * handling placement-aware transitions. Wrapper around `useTransitionStatus`.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstyles\n */\nfunction useTransitionStyles(context, _temp2) {\n  let {\n    initial: unstable_initial = {\n      opacity: 0\n    },\n    open: unstable_open,\n    close: unstable_close,\n    common: unstable_common,\n    duration = 250\n  } = _temp2 === void 0 ? {} : _temp2;\n  const placement = context.placement;\n  const side = placement.split('-')[0];\n  const [styles, setStyles] = React.useState({});\n  const {\n    isMounted,\n    status\n  } = useTransitionStatus(context, {\n    duration\n  });\n  const initialRef = useLatestRef(unstable_initial);\n  const openRef = useLatestRef(unstable_open);\n  const closeRef = useLatestRef(unstable_close);\n  const commonRef = useLatestRef(unstable_common);\n  const isNumberDuration = typeof duration === 'number';\n  const openDuration = (isNumberDuration ? duration : duration.open) || 0;\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  index(() => {\n    const fnArgs = {\n      side,\n      placement\n    };\n    const initial = initialRef.current;\n    const close = closeRef.current;\n    const open = openRef.current;\n    const common = commonRef.current;\n    const initialStyles = typeof initial === 'function' ? initial(fnArgs) : initial;\n    const closeStyles = typeof close === 'function' ? close(fnArgs) : close;\n    const commonStyles = typeof common === 'function' ? common(fnArgs) : common;\n    const openStyles = (typeof open === 'function' ? open(fnArgs) : open) || Object.keys(initialStyles).reduce((acc, key) => {\n      acc[key] = '';\n      return acc;\n    }, {});\n    if (status === 'initial' || status === 'unmounted') {\n      setStyles(styles => ({\n        transitionProperty: styles.transitionProperty,\n        ...commonStyles,\n        ...initialStyles\n      }));\n    }\n    if (status === 'open') {\n      setStyles({\n        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: openDuration + \"ms\",\n        ...commonStyles,\n        ...openStyles\n      });\n    }\n    if (status === 'close') {\n      const styles = closeStyles || initialStyles;\n      setStyles({\n        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: closeDuration + \"ms\",\n        ...commonStyles,\n        ...styles\n      });\n    }\n  }, [side, placement, closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status]);\n  return {\n    isMounted,\n    styles\n  };\n}\n\n/**\n * Provides a matching callback that can be used to focus an item as the user\n * types, often used in tandem with `useListNavigation()`.\n * @see https://floating-ui.com/docs/useTypeahead\n */\nconst useTypeahead = function (_ref, _temp) {\n  var _ref2;\n  let {\n    open,\n    dataRef,\n    refs\n  } = _ref;\n  let {\n    listRef,\n    activeIndex,\n    onMatch: unstable_onMatch = () => {},\n    enabled = true,\n    findMatch = null,\n    resetMs = 1000,\n    ignoreKeys = [],\n    selectedIndex = null\n  } = _temp === void 0 ? {\n    listRef: {\n      current: []\n    },\n    activeIndex: null\n  } : _temp;\n  const timeoutIdRef = React.useRef();\n  const stringRef = React.useRef('');\n  const prevIndexRef = React.useRef((_ref2 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref2 : -1);\n  const matchIndexRef = React.useRef(null);\n  const onMatch = useEvent(unstable_onMatch);\n  const findMatchRef = useLatestRef(findMatch);\n  const ignoreKeysRef = useLatestRef(ignoreKeys);\n  index(() => {\n    if (open) {\n      clearTimeout(timeoutIdRef.current);\n      matchIndexRef.current = null;\n      stringRef.current = '';\n    }\n  }, [open]);\n  index(() => {\n    // Sync arrow key navigation but not typeahead navigation.\n    if (open && stringRef.current === '') {\n      var _ref3;\n      prevIndexRef.current = (_ref3 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref3 : -1;\n    }\n  }, [open, selectedIndex, activeIndex]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    function onKeyDown(event) {\n      var _refs$floating$curren;\n      // Correctly scope nested non-portalled floating elements. Since the nested\n      // floating element is inside of the another, we find the closest role\n      // that indicates the floating element scope.\n      const target = getTarget(event.nativeEvent);\n      if (isElement(target) && (activeElement$1(getDocument(target)) !== event.currentTarget ? (_refs$floating$curren = refs.floating.current) != null && _refs$floating$curren.contains(target) ? target.closest('[role=\"dialog\"],[role=\"menu\"],[role=\"listbox\"],[role=\"tree\"],[role=\"grid\"]') !== event.currentTarget : false : !event.currentTarget.contains(target))) {\n        return;\n      }\n      if (stringRef.current.length > 0 && stringRef.current[0] !== ' ') {\n        dataRef.current.typing = true;\n        if (event.key === ' ') {\n          stopEvent(event);\n        }\n      }\n      const listContent = listRef.current;\n      if (listContent == null || ignoreKeysRef.current.includes(event.key) ||\n      // Character key.\n      event.key.length !== 1 ||\n      // Modifier key.\n      event.ctrlKey || event.metaKey || event.altKey) {\n        return;\n      }\n\n      // Bail out if the list contains a word like \"llama\" or \"aaron\". TODO:\n      // allow it in this case, too.\n      const allowRapidSuccessionOfFirstLetter = listContent.every(text => {\n        var _text$, _text$2;\n        return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : true;\n      });\n\n      // Allows the user to cycle through items that start with the same letter\n      // in rapid succession.\n      if (allowRapidSuccessionOfFirstLetter && stringRef.current === event.key) {\n        stringRef.current = '';\n        prevIndexRef.current = matchIndexRef.current;\n      }\n      stringRef.current += event.key;\n      clearTimeout(timeoutIdRef.current);\n      timeoutIdRef.current = setTimeout(() => {\n        stringRef.current = '';\n        prevIndexRef.current = matchIndexRef.current;\n        dataRef.current.typing = false;\n      }, resetMs);\n      const prevIndex = prevIndexRef.current;\n      const orderedList = [...listContent.slice((prevIndex || 0) + 1), ...listContent.slice(0, (prevIndex || 0) + 1)];\n      const str = findMatchRef.current ? findMatchRef.current(orderedList, stringRef.current) : orderedList.find(text => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(stringRef.current.toLocaleLowerCase())) === 0);\n      const index = str ? listContent.indexOf(str) : -1;\n      if (index !== -1) {\n        onMatch(index);\n        matchIndexRef.current = index;\n      }\n    }\n    return {\n      reference: {\n        onKeyDown\n      },\n      floating: {\n        onKeyDown\n      }\n    };\n  }, [enabled, dataRef, listRef, resetMs, ignoreKeysRef, findMatchRef, onMatch, refs]);\n};\n\nfunction getArgsWithCustomFloatingHeight(state, height) {\n  return {\n    ...state,\n    rects: {\n      ...state.rects,\n      floating: {\n        ...state.rects.floating,\n        height\n      }\n    }\n  };\n}\n/**\n * Positions the floating element such that an inner element inside\n * of it is anchored to the reference element.\n * @see https://floating-ui.com/docs/inner\n */\nconst inner = props => ({\n  name: 'inner',\n  options: props,\n  async fn(state) {\n    const {\n      listRef,\n      overflowRef,\n      onFallbackChange,\n      offset: innerOffset = 0,\n      index = 0,\n      minItemsVisible = 4,\n      referenceOverflowThreshold = 0,\n      scrollRef,\n      ...detectOverflowOptions\n    } = props;\n    const {\n      rects,\n      elements: {\n        floating\n      }\n    } = state;\n    const item = listRef.current[index];\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!state.placement.startsWith('bottom')) {\n        console.warn(['Floating UI: `placement` side must be \"bottom\" when using the', '`inner` middleware.'].join(' '));\n      }\n    }\n    if (!item) {\n      return {};\n    }\n    const nextArgs = {\n      ...state,\n      ...(await offset(-item.offsetTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(state))\n    };\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || floating;\n    const overflow = await detectOverflow(getArgsWithCustomFloatingHeight(nextArgs, el.scrollHeight), detectOverflowOptions);\n    const refOverflow = await detectOverflow(nextArgs, {\n      ...detectOverflowOptions,\n      elementContext: 'reference'\n    });\n    const diffY = Math.max(0, overflow.top);\n    const nextY = nextArgs.y + diffY;\n    const maxHeight = Math.max(0, el.scrollHeight - diffY - Math.max(0, overflow.bottom));\n    el.style.maxHeight = maxHeight + \"px\";\n    el.scrollTop = diffY;\n\n    // There is not enough space, fallback to standard anchored positioning\n    if (onFallbackChange) {\n      if (el.offsetHeight < item.offsetHeight * Math.min(minItemsVisible, listRef.current.length - 1) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold) {\n        flushSync(() => onFallbackChange(true));\n      } else {\n        flushSync(() => onFallbackChange(false));\n      }\n    }\n    if (overflowRef) {\n      overflowRef.current = await detectOverflow(getArgsWithCustomFloatingHeight({\n        ...nextArgs,\n        y: nextY\n      }, el.offsetHeight), detectOverflowOptions);\n    }\n    return {\n      y: nextY\n    };\n  }\n});\n/**\n * Changes the `inner` middleware's `offset` upon a `wheel` event to\n * expand the floating element's height, revealing more list items.\n * @see https://floating-ui.com/docs/inner\n */\nconst useInnerOffset = (_ref, _ref2) => {\n  let {\n    open,\n    elements\n  } = _ref;\n  let {\n    enabled = true,\n    overflowRef,\n    scrollRef,\n    onChange: unstable_onChange\n  } = _ref2;\n  const onChange = useEvent(unstable_onChange);\n  const controlledScrollingRef = React.useRef(false);\n  const prevScrollTopRef = React.useRef(null);\n  const initialOverflowRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onWheel(e) {\n      if (e.ctrlKey || !el || overflowRef.current == null) {\n        return;\n      }\n      const dY = e.deltaY;\n      const isAtTop = overflowRef.current.top >= -0.5;\n      const isAtBottom = overflowRef.current.bottom >= -0.5;\n      const remainingScroll = el.scrollHeight - el.clientHeight;\n      const sign = dY < 0 ? -1 : 1;\n      const method = dY < 0 ? 'max' : 'min';\n      if (el.scrollHeight <= el.clientHeight) {\n        return;\n      }\n      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {\n        e.preventDefault();\n        flushSync(() => {\n          onChange(d => d + Math[method](dY, remainingScroll * sign));\n        });\n      } else if (/firefox/i.test(getUserAgent())) {\n        // Needed to propagate scrolling during momentum scrolling phase once\n        // it gets limited by the boundary. UX improvement, not critical.\n        el.scrollTop += dY;\n      }\n    }\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n    if (open && el) {\n      el.addEventListener('wheel', onWheel);\n\n      // Wait for the position to be ready.\n      requestAnimationFrame(() => {\n        prevScrollTopRef.current = el.scrollTop;\n        if (overflowRef.current != null) {\n          initialOverflowRef.current = {\n            ...overflowRef.current\n          };\n        }\n      });\n      return () => {\n        prevScrollTopRef.current = null;\n        initialOverflowRef.current = null;\n        el.removeEventListener('wheel', onWheel);\n      };\n    }\n  }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      floating: {\n        onKeyDown() {\n          controlledScrollingRef.current = true;\n        },\n        onWheel() {\n          controlledScrollingRef.current = false;\n        },\n        onPointerMove() {\n          controlledScrollingRef.current = false;\n        },\n        onScroll() {\n          const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n          if (!overflowRef.current || !el || !controlledScrollingRef.current) {\n            return;\n          }\n          if (prevScrollTopRef.current !== null) {\n            const scrollDiff = el.scrollTop - prevScrollTopRef.current;\n            if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {\n              flushSync(() => onChange(d => d + scrollDiff));\n            }\n          }\n\n          // [Firefox] Wait for the height change to have been applied.\n          requestAnimationFrame(() => {\n            prevScrollTopRef.current = el.scrollTop;\n          });\n        }\n      }\n    };\n  }, [enabled, overflowRef, elements.floating, scrollRef, onChange]);\n};\n\nfunction isPointInPolygon(point, polygon) {\n  const [x, y] = point;\n  let isInside = false;\n  const length = polygon.length;\n  for (let i = 0, j = length - 1; i < length; j = i++) {\n    const [xi, yi] = polygon[i] || [0, 0];\n    const [xj, yj] = polygon[j] || [0, 0];\n    const intersect = yi >= y !== yj >= y && x <= (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) {\n      isInside = !isInside;\n    }\n  }\n  return isInside;\n}\nfunction isInside(point, rect) {\n  return point[0] >= rect.x && point[0] <= rect.x + rect.width && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n}\nfunction safePolygon(_temp) {\n  let {\n    restMs = 0,\n    buffer = 0.5,\n    blockPointerEvents = false\n  } = _temp === void 0 ? {} : _temp;\n  let timeoutId;\n  let isInsideRect = false;\n  let hasLanded = false;\n  const fn = _ref => {\n    let {\n      x,\n      y,\n      placement,\n      elements,\n      onClose,\n      nodeId,\n      tree\n    } = _ref;\n    return function onMouseMove(event) {\n      function close() {\n        clearTimeout(timeoutId);\n        onClose();\n      }\n      clearTimeout(timeoutId);\n      if (!elements.domReference || !elements.floating || placement == null || x == null || y == null) {\n        return;\n      }\n      const {\n        clientX,\n        clientY\n      } = event;\n      const clientPoint = [clientX, clientY];\n      const target = getTarget(event);\n      const isLeave = event.type === 'mouseleave';\n      const isOverFloatingEl = contains(elements.floating, target);\n      const isOverReferenceEl = contains(elements.domReference, target);\n      const refRect = elements.domReference.getBoundingClientRect();\n      const rect = elements.floating.getBoundingClientRect();\n      const side = placement.split('-')[0];\n      const cursorLeaveFromRight = x > rect.right - rect.width / 2;\n      const cursorLeaveFromBottom = y > rect.bottom - rect.height / 2;\n      const isOverReferenceRect = isInside(clientPoint, refRect);\n      if (isOverFloatingEl) {\n        hasLanded = true;\n        if (!isLeave) {\n          return;\n        }\n      }\n      if (isOverReferenceEl) {\n        hasLanded = false;\n      }\n      if (isOverReferenceEl && !isLeave) {\n        hasLanded = true;\n        return;\n      }\n\n      // Prevent overlapping floating element from being stuck in an open-close\n      // loop: https://github.com/floating-ui/floating-ui/issues/1910\n      if (isLeave && isElement(event.relatedTarget) && contains(elements.floating, event.relatedTarget)) {\n        return;\n      }\n\n      // If any nested child is open, abort.\n      if (tree && getChildren(tree.nodesRef.current, nodeId).some(_ref2 => {\n        let {\n          context\n        } = _ref2;\n        return context == null ? void 0 : context.open;\n      })) {\n        return;\n      }\n\n      // If the pointer is leaving from the opposite side, the \"buffer\" logic\n      // creates a point where the floating element remains open, but should be\n      // ignored.\n      // A constant of 1 handles floating point rounding errors.\n      if (side === 'top' && y >= refRect.bottom - 1 || side === 'bottom' && y <= refRect.top + 1 || side === 'left' && x >= refRect.right - 1 || side === 'right' && x <= refRect.left + 1) {\n        return close();\n      }\n\n      // Ignore when the cursor is within the rectangular trough between the\n      // two elements. Since the triangle is created from the cursor point,\n      // which can start beyond the ref element's edge, traversing back and\n      // forth from the ref to the floating element can cause it to close. This\n      // ensures it always remains open in that case.\n      let rectPoly = [];\n      switch (side) {\n        case 'top':\n          rectPoly = [[rect.left, refRect.top + 1], [rect.left, rect.bottom - 1], [rect.right, rect.bottom - 1], [rect.right, refRect.top + 1]];\n          isInsideRect = clientX >= rect.left && clientX <= rect.right && clientY >= rect.top && clientY <= refRect.top + 1;\n          break;\n        case 'bottom':\n          rectPoly = [[rect.left, rect.top + 1], [rect.left, refRect.bottom - 1], [rect.right, refRect.bottom - 1], [rect.right, rect.top + 1]];\n          isInsideRect = clientX >= rect.left && clientX <= rect.right && clientY >= refRect.bottom - 1 && clientY <= rect.bottom;\n          break;\n        case 'left':\n          rectPoly = [[rect.right - 1, rect.bottom], [rect.right - 1, rect.top], [refRect.left + 1, rect.top], [refRect.left + 1, rect.bottom]];\n          isInsideRect = clientX >= rect.left && clientX <= refRect.left + 1 && clientY >= rect.top && clientY <= rect.bottom;\n          break;\n        case 'right':\n          rectPoly = [[refRect.right - 1, rect.bottom], [refRect.right - 1, rect.top], [rect.left + 1, rect.top], [rect.left + 1, rect.bottom]];\n          isInsideRect = clientX >= refRect.right - 1 && clientX <= rect.right && clientY >= rect.top && clientY <= rect.bottom;\n          break;\n      }\n      function getPolygon(_ref3) {\n        let [x, y] = _ref3;\n        const isFloatingWider = rect.width > refRect.width;\n        const isFloatingTaller = rect.height > refRect.height;\n        switch (side) {\n          case 'top':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.bottom - buffer : isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'bottom':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.top + buffer : isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'left':\n            {\n              const cursorPointOne = [x + buffer + 1, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x + buffer + 1, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.right - buffer : isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]];\n              return [...commonPoints, cursorPointOne, cursorPointTwo];\n            }\n          case 'right':\n            {\n              const cursorPointOne = [x - buffer, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x - buffer, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.left + buffer : isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n        }\n      }\n      const poly = isInsideRect ? rectPoly : getPolygon([x, y]);\n      if (isInsideRect) {\n        return;\n      } else if (hasLanded && !isOverReferenceRect) {\n        return close();\n      }\n      if (!isPointInPolygon([clientX, clientY], poly)) {\n        close();\n      } else if (restMs && !hasLanded) {\n        timeoutId = setTimeout(close, restMs);\n      }\n    };\n  };\n  fn.__options = {\n    blockPointerEvents\n  };\n  return fn;\n}\n\n/**\n * Provides data to position a floating element and context to add interactions.\n * @see https://floating-ui.com/docs/react\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    open = false,\n    onOpenChange: unstable_onOpenChange,\n    nodeId\n  } = options;\n  const position = useFloating$1(options);\n  const tree = useFloatingTree();\n  const domReferenceRef = React.useRef(null);\n  const dataRef = React.useRef({});\n  const events = React.useState(() => createPubSub())[0];\n  const [domReference, setDomReference] = React.useState(null);\n  const setPositionReference = React.useCallback(node => {\n    const positionReference = isElement(node) ? {\n      getBoundingClientRect: () => node.getBoundingClientRect(),\n      contextElement: node\n    } : node;\n    position.refs.setReference(positionReference);\n  }, [position.refs]);\n  const setReference = React.useCallback(node => {\n    if (isElement(node) || node === null) {\n      domReferenceRef.current = node;\n      setDomReference(node);\n    }\n\n    // Backwards-compatibility for passing a virtual element to `reference`\n    // after it has set the DOM reference.\n    if (isElement(position.refs.reference.current) || position.refs.reference.current === null ||\n    // Don't allow setting virtual elements using the old technique back to\n    // `null` to support `positionReference` + an unstable `reference`\n    // callback ref.\n    node !== null && !isElement(node)) {\n      position.refs.setReference(node);\n    }\n  }, [position.refs]);\n  const refs = React.useMemo(() => ({\n    ...position.refs,\n    setReference,\n    setPositionReference,\n    domReference: domReferenceRef\n  }), [position.refs, setReference, setPositionReference]);\n  const elements = React.useMemo(() => ({\n    ...position.elements,\n    domReference: domReference\n  }), [position.elements, domReference]);\n  const onOpenChange = useEvent(unstable_onOpenChange);\n  const context = React.useMemo(() => ({\n    ...position,\n    refs,\n    elements,\n    dataRef,\n    nodeId,\n    events,\n    open,\n    onOpenChange\n  }), [position, nodeId, events, open, onOpenChange, refs, elements]);\n  index(() => {\n    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);\n    if (node) {\n      node.context = context;\n    }\n  });\n  return React.useMemo(() => ({\n    ...position,\n    context,\n    refs,\n    reference: setReference,\n    positionReference: setPositionReference\n  }), [position, refs, context, setReference, setPositionReference]);\n}\n\nfunction mergeProps(userProps, propsList, elementKey) {\n  const map = new Map();\n  return {\n    ...(elementKey === 'floating' && {\n      tabIndex: -1\n    }),\n    ...userProps,\n    ...propsList.map(value => value ? value[elementKey] : null).concat(userProps).reduce((acc, props) => {\n      if (!props) {\n        return acc;\n      }\n      Object.entries(props).forEach(_ref => {\n        let [key, value] = _ref;\n        if (key.indexOf('on') === 0) {\n          if (!map.has(key)) {\n            map.set(key, []);\n          }\n          if (typeof value === 'function') {\n            var _map$get;\n            (_map$get = map.get(key)) == null ? void 0 : _map$get.push(value);\n            acc[key] = function () {\n              var _map$get2;\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.forEach(fn => fn(...args));\n            };\n          }\n        } else {\n          acc[key] = value;\n        }\n      });\n      return acc;\n    }, {})\n  };\n}\nconst useInteractions = function (propsList) {\n  if (propsList === void 0) {\n    propsList = [];\n  }\n  // The dependencies are a dynamic array, so we can't use the linter's\n  // suggestion to add it to the deps array.\n  const deps = propsList;\n  const getReferenceProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getFloatingProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getItemProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'item'),\n  // Granularly check for `item` changes, because the `getItemProps` getter\n  // should be as referentially stable as possible since it may be passed as\n  // a prop to many components. All `item` key values must therefore be\n  // memoized.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  propsList.map(key => key == null ? void 0 : key.item));\n  return React.useMemo(() => ({\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  }), [getReferenceProps, getFloatingProps, getItemProps]);\n};\n\nexport { FloatingDelayGroup, FloatingFocusManager, FloatingNode, FloatingOverlay, FloatingPortal, FloatingTree, inner, safePolygon, useClick, useDelayGroup, useDelayGroupContext, useDismiss, useFloating, useFloatingNodeId, useFloatingParentNodeId, useFloatingPortalNode, useFloatingTree, useFocus, useHover, useId, useInnerOffset, useInteractions, useListNavigation, useMergeRefs, useRole, useTransitionStatus, useTransitionStyles, useTypeahead };\n", "// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nconst candidateSelectors = [\n  'input:not([inert])',\n  'select:not([inert])',\n  'textarea:not([inert])',\n  'a[href]:not([inert])',\n  'button:not([inert])',\n  '[tabindex]:not(slot):not([inert])',\n  'audio[controls]:not([inert])',\n  'video[controls]:not([inert])',\n  '[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\n  'details>summary:first-of-type:not([inert])',\n  'details:not([inert])',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element?.getRootNode?.()\n    : (element) => element?.ownerDocument;\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nconst isInert = function (node, lookUp = true) {\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  const inertAtt = node?.getAttribute?.('inert');\n  const inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  const result = inert || (lookUp && node && isInert(node.parentNode)); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nconst isContentEditable = function (node) {\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  const attValue = node?.getAttribute?.('contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      const validShadowRoot =\n        !isInert(shadowRoot, false) &&\n        (!options.shadowRootFilter || options.shadowRootFilter(element));\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nconst hasTabIndex = function (node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nconst getTabIndex = function (node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if (\n      (/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        isContentEditable(node)) &&\n      !hasTabIndex(node)\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nconst getSortOrderTabIndex = function (node, isScope) {\n  const tabIndex = getTabIndex(node);\n\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n\n  return tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  let nodeRoot = node && getRootNode(node);\n  let nodeRootHost = nodeRoot?.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  let attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    attached = !!(\n      nodeRootHost?.ownerDocument?.contains(nodeRootHost) ||\n      node?.ownerDocument?.contains(node)\n    );\n\n    while (!attached && nodeRootHost) {\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = nodeRoot?.host;\n      attached = !!nodeRootHost?.ownerDocument?.contains(nodeRootHost);\n    }\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    // we must do an inert look up to filter out any elements inside an inert ancestor\n    //  because we're limited in the type of selectors we can use in JSDom (see related\n    //  note related to `candidateSelectors`)\n    isInert(node) ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabIndex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getSortOrderTabIndex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorTabbable.bind(null, options),\n        flatten: false,\n        getShadowRoot: options.getShadowRoot,\n        shadowRootFilter: isValidShadowRootTabbable,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorFocusable.bind(null, options),\n        flatten: true,\n        getShadowRoot: options.getShadowRoot,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable, getTabIndex };\n", "import { arrow as arrow$1, computePosition } from '@floating-ui/dom';\nexport { autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\n/**\n * A data provider that provides data to position an inner element of the\n * floating element (usually a triangle or caret) so that it is centered to the\n * reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => {\n  const {\n    element,\n    padding\n  } = options;\n  function isRef(value) {\n    return Object.prototype.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(args) {\n      if (isRef(element)) {\n        if (element.current != null) {\n          return arrow$1({\n            element: element.current,\n            padding\n          }).fn(args);\n        }\n        return {};\n      } else if (element) {\n        return arrow$1({\n          element,\n          padding\n        }).fn(args);\n      }\n      return {};\n    }\n  };\n};\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length, i, keys;\n  if (a && b && typeof a == 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/react\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: null,\n    y: null,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const [reference, _setReference] = React.useState(null);\n  const [floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (referenceRef.current !== node) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (floatingRef.current !== node) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        isPositioned: true\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (reference && floating) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(reference, floating, update);\n      } else {\n        update();\n      }\n    }\n  }, [reference, floating, update, whileElementsMountedRef]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference,\n    floating\n  }), [reference, floating]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    reference: setReference,\n    floating: setFloating\n  }), [data, update, refs, elements, setReference, setFloating]);\n}\n\nexport { arrow, useFloating };\n"],
  "mappings": "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",
  "names": ["import_react", "React", "import_react", "candidateSelectors", "candidateSelector", "join", "NoElement", "Element", "matches", "prototype", "msMatchesSelector", "webkitMatchesSelector", "getRootNode", "element", "_element$getRootNode", "call", "ownerDocument", "focusableCandidateSelector", "candidateSelectors", "concat", "join", "arrow", "platform", "data", "index", "React", "React", "FocusGuard", "index", "VisuallyHiddenDismiss", "FloatingOverlay", "index", "useFloating", "index", "node", "Ze", "$e", "pe", "k", "arrow", "q", "It", "z", "Ce", "Te", "j", "ae", "useFloating", "Yt", "Wt", "Qe"]
}
