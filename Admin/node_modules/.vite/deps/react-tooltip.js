import {
  require_classnames
} from "./chunk-I33YV5XJ.js";
import {
  computePosition
} from "./chunk-DWPEWCAH.js";
import {
  arrow,
  flip,
  offset,
  shift
} from "./chunk-Y7VPMMYM.js";
import {
  require_react
} from "./chunk-4UQS7KPA.js";
import {
  __toESM
} from "./chunk-2GTGKKMZ.js";

// node_modules/react-tooltip/dist/react-tooltip.min.mjs
var import_react = __toESM(require_react(), 1);
var import_classnames = __toESM(require_classnames(), 1);
var f = "react-tooltip-core-styles";
var y = "react-tooltip-base-styles";
function h({ css: e2, id: t2 = y, type: r2 = "base", ref: o2 }) {
  var n2, l2;
  if ("core" === r2 && "undefined" != typeof process && (null === (n2 = null === process || void 0 === process ? void 0 : process.env) || void 0 === n2 ? void 0 : n2.REACT_TOOLTIP_DISABLE_CORE_STYLES))
    return;
  if ("core" !== r2 && "undefined" != typeof process && (null === (l2 = null === process || void 0 === process ? void 0 : process.env) || void 0 === l2 ? void 0 : l2.REACT_TOOLTIP_DISABLE_BASE_STYLES))
    return;
  "core" === r2 && (t2 = f), o2 || (o2 = {});
  const { insertAt: c2 } = o2;
  if (!e2 || "undefined" == typeof document || document.getElementById(t2))
    return;
  const i2 = document.head || document.getElementsByTagName("head")[0], s2 = document.createElement("style");
  s2.id = t2, s2.type = "text/css", "top" === c2 && i2.firstChild ? i2.insertBefore(s2, i2.firstChild) : i2.appendChild(s2), s2.styleSheet ? s2.styleSheet.cssText = e2 : s2.appendChild(document.createTextNode(e2));
}
function w({ type: e2 = "base", id: t2 = y } = {}) {
  "core" === e2 && (t2 = f);
  const r2 = document.getElementById(t2);
  null == r2 || r2.remove();
}
var b = (e2, t2, r2) => {
  let o2 = null;
  return function(...n2) {
    const l2 = () => {
      o2 = null, r2 || e2.apply(this, n2);
    };
    r2 && !o2 && (e2.apply(this, n2), o2 = setTimeout(l2, t2)), r2 || (o2 && clearTimeout(o2), o2 = setTimeout(l2, t2));
  };
};
var S = "DEFAULT_TOOLTIP_ID";
var E = { anchorRefs: /* @__PURE__ */ new Set(), activeAnchor: { current: null }, attach: () => {
}, detach: () => {
}, setActiveAnchor: () => {
} };
var _ = (0, import_react.createContext)({ getTooltipData: () => E });
var g = ({ children: t2 }) => {
  const [l2, c2] = (0, import_react.useState)({ [S]: /* @__PURE__ */ new Set() }), [i2, s2] = (0, import_react.useState)({ [S]: { current: null } }), a2 = (e2, ...t3) => {
    c2((r2) => {
      var o2;
      const n2 = null !== (o2 = r2[e2]) && void 0 !== o2 ? o2 : /* @__PURE__ */ new Set();
      return t3.forEach((e3) => n2.add(e3)), { ...r2, [e2]: new Set(n2) };
    });
  }, u = (e2, ...t3) => {
    c2((r2) => {
      const o2 = r2[e2];
      return o2 ? (t3.forEach((e3) => o2.delete(e3)), { ...r2 }) : r2;
    });
  }, d = (0, import_react.useCallback)((e2 = S) => {
    var t3, r2;
    return { anchorRefs: null !== (t3 = l2[e2]) && void 0 !== t3 ? t3 : /* @__PURE__ */ new Set(), activeAnchor: null !== (r2 = i2[e2]) && void 0 !== r2 ? r2 : { current: null }, attach: (...t4) => a2(e2, ...t4), detach: (...t4) => u(e2, ...t4), setActiveAnchor: (t4) => ((e3, t5) => {
      s2((r3) => {
        var o2;
        return (null === (o2 = r3[e3]) || void 0 === o2 ? void 0 : o2.current) === t5.current ? r3 : { ...r3, [e3]: t5 };
      });
    })(e2, t4) };
  }, [l2, i2, a2, u]), p = (0, import_react.useMemo)(() => ({ getTooltipData: d }), [d]);
  return import_react.default.createElement(_.Provider, { value: p }, t2);
};
function A(e2 = S) {
  return (0, import_react.useContext)(_).getTooltipData(e2);
}
var T = ({ tooltipId: t2, children: r2, className: o2, place: n2, content: l2, html: s2, variant: u, offset: d, wrapper: p, events: v, positionStrategy: m, delayShow: f2, delayHide: y2 }) => {
  const { attach: h2, detach: w2 } = A(t2), b2 = (0, import_react.useRef)(null);
  return (0, import_react.useEffect)(() => (h2(b2), () => {
    w2(b2);
  }), []), import_react.default.createElement("span", { ref: b2, className: (0, import_classnames.default)("react-tooltip-wrapper", o2), "data-tooltip-place": n2, "data-tooltip-content": l2, "data-tooltip-html": s2, "data-tooltip-variant": u, "data-tooltip-offset": d, "data-tooltip-wrapper": p, "data-tooltip-events": v, "data-tooltip-position-strategy": m, "data-tooltip-delay-show": f2, "data-tooltip-delay-hide": y2 }, r2);
};
var O = "undefined" != typeof window ? import_react.useLayoutEffect : import_react.useEffect;
var L = (e2) => {
  if (!(e2 instanceof HTMLElement || e2 instanceof SVGElement))
    return false;
  const t2 = getComputedStyle(e2);
  return ["overflow", "overflow-x", "overflow-y"].some((e3) => {
    const r2 = t2.getPropertyValue(e3);
    return "auto" === r2 || "scroll" === r2;
  });
};
var R = (e2) => {
  if (!e2)
    return null;
  let t2 = e2.parentElement;
  for (; t2; ) {
    if (L(t2))
      return t2;
    t2 = t2.parentElement;
  }
  return document.scrollingElement || document.documentElement;
};
var N = async ({ elementReference: e2 = null, tooltipReference: t2 = null, tooltipArrowReference: r2 = null, place: o2 = "top", offset: n2 = 10, strategy: l2 = "absolute", middlewares: c2 = [offset(Number(n2)), flip(), shift({ padding: 5 })], border: i2 }) => {
  if (!e2)
    return { tooltipStyles: {}, tooltipArrowStyles: {}, place: o2 };
  if (null === t2)
    return { tooltipStyles: {}, tooltipArrowStyles: {}, place: o2 };
  const s2 = c2;
  return r2 ? (s2.push(arrow({ element: r2, padding: 5 })), computePosition(e2, t2, { placement: o2, strategy: l2, middleware: s2 }).then(({ x: e3, y: t3, placement: r3, middlewareData: o3 }) => {
    var n3, l3;
    const c3 = { left: `${e3}px`, top: `${t3}px`, border: i2 }, { x: s3, y: a2 } = null !== (n3 = o3.arrow) && void 0 !== n3 ? n3 : { x: 0, y: 0 }, u = null !== (l3 = { top: "bottom", right: "left", bottom: "top", left: "right" }[r3.split("-")[0]]) && void 0 !== l3 ? l3 : "bottom", d = i2 && { top: { borderBottom: i2, borderRight: i2 }, right: { borderBottom: i2, borderLeft: i2 }, bottom: { borderTop: i2, borderLeft: i2 }, left: { borderTop: i2, borderRight: i2 } }[r3.split("-")[0]];
    let p = 0;
    if (i2) {
      const e4 = `${i2}`.match(/(\d+)px/);
      p = (null == e4 ? void 0 : e4[1]) ? Number(e4[1]) : 1;
    }
    return { tooltipStyles: c3, tooltipArrowStyles: { left: null != s3 ? `${s3}px` : "", top: null != a2 ? `${a2}px` : "", right: "", bottom: "", ...d, [u]: `-${4 + p}px` }, place: r3 };
  })) : computePosition(e2, t2, { placement: "bottom", strategy: l2, middleware: s2 }).then(({ x: e3, y: t3, placement: r3 }) => ({ tooltipStyles: { left: `${e3}px`, top: `${t3}px` }, tooltipArrowStyles: {}, place: r3 }));
};
var k = "core-styles-module_tooltip__3vRRp";
var x = "core-styles-module_fixed__pcSol";
var $ = "core-styles-module_arrow__cvMwQ";
var C = "core-styles-module_noArrow__xock6";
var I = "core-styles-module_clickable__ZuTTB";
var B = "core-styles-module_show__Nt9eE";
var D = { tooltip: "styles-module_tooltip__mnnfp", arrow: "styles-module_arrow__K0L3T", dark: "styles-module_dark__xNqje", light: "styles-module_light__Z6W-X", success: "styles-module_success__A2AKt", warning: "styles-module_warning__SCK0X", error: "styles-module_error__JvumD", info: "styles-module_info__BWdHW" };
var H = ({ id: t2, className: o2, classNameArrow: n2, variant: l2 = "dark", anchorId: s2, anchorSelect: u, place: d = "top", offset: p = 10, events: v = ["hover"], openOnClick: m = false, positionStrategy: f2 = "absolute", middlewares: y2, wrapper: h2, delayShow: w2 = 0, delayHide: S2 = 0, float: E2 = false, hidden: _2 = false, noArrow: g2 = false, clickable: T2 = false, closeOnEsc: L2 = false, closeOnScroll: H2 = false, closeOnResize: j2 = false, style: q2, position: z, afterShow: W, afterHide: M, content: P, contentWrapperRef: K, isOpen: U, setIsOpen: X, activeAnchor: Y, setActiveAnchor: F, border: V, opacity: Z }) => {
  const G = (0, import_react.useRef)(null), J = (0, import_react.useRef)(null), Q = (0, import_react.useRef)(null), ee = (0, import_react.useRef)(null), [te, re] = (0, import_react.useState)(d), [oe, ne] = (0, import_react.useState)({}), [le, ce] = (0, import_react.useState)({}), [ie, se] = (0, import_react.useState)(false), [ae, ue] = (0, import_react.useState)(false), de = (0, import_react.useRef)(false), pe = (0, import_react.useRef)(null), { anchorRefs: ve, setActiveAnchor: me } = A(t2), fe = (0, import_react.useRef)(false), [ye, he] = (0, import_react.useState)([]), we = (0, import_react.useRef)(false), be = m || v.includes("click");
  O(() => (we.current = true, () => {
    we.current = false;
  }), []), (0, import_react.useEffect)(() => {
    if (!ie) {
      const e2 = setTimeout(() => {
        ue(false);
      }, 150);
      return () => {
        clearTimeout(e2);
      };
    }
    return () => null;
  }, [ie]);
  const Se = (e2) => {
    we.current && (e2 && ue(true), setTimeout(() => {
      we.current && (null == X || X(e2), void 0 === U && se(e2));
    }, 10));
  };
  (0, import_react.useEffect)(() => {
    if (void 0 === U)
      return () => null;
    U && ue(true);
    const e2 = setTimeout(() => {
      se(U);
    }, 10);
    return () => {
      clearTimeout(e2);
    };
  }, [U]), (0, import_react.useEffect)(() => {
    ie !== de.current && (de.current = ie, ie ? null == W || W() : null == M || M());
  }, [ie]);
  const Ee = (e2 = S2) => {
    ee.current && clearTimeout(ee.current), ee.current = setTimeout(() => {
      fe.current || Se(false);
    }, e2);
  }, _e = (e2) => {
    var t3;
    if (!e2)
      return;
    const r2 = null !== (t3 = e2.currentTarget) && void 0 !== t3 ? t3 : e2.target;
    if (!(null == r2 ? void 0 : r2.isConnected))
      return F(null), void me({ current: null });
    w2 ? (Q.current && clearTimeout(Q.current), Q.current = setTimeout(() => {
      Se(true);
    }, w2)) : Se(true), F(r2), me({ current: r2 }), ee.current && clearTimeout(ee.current);
  }, ge = () => {
    T2 ? Ee(S2 || 100) : S2 ? Ee() : Se(false), Q.current && clearTimeout(Q.current);
  }, Ae = ({ x: e2, y: t3 }) => {
    N({ place: d, offset: p, elementReference: { getBoundingClientRect: () => ({ x: e2, y: t3, width: 0, height: 0, top: t3, left: e2, right: e2, bottom: t3 }) }, tooltipReference: G.current, tooltipArrowReference: J.current, strategy: f2, middlewares: y2, border: V }).then((e3) => {
      Object.keys(e3.tooltipStyles).length && ne(e3.tooltipStyles), Object.keys(e3.tooltipArrowStyles).length && ce(e3.tooltipArrowStyles), re(e3.place);
    });
  }, Te = (e2) => {
    if (!e2)
      return;
    const t3 = e2, r2 = { x: t3.clientX, y: t3.clientY };
    Ae(r2), pe.current = r2;
  }, Oe = (e2) => {
    _e(e2), S2 && Ee();
  }, Le = (e2) => {
    var t3;
    [document.querySelector(`[id='${s2}']`), ...ye].some((t4) => null == t4 ? void 0 : t4.contains(e2.target)) || (null === (t3 = G.current) || void 0 === t3 ? void 0 : t3.contains(e2.target)) || (Se(false), Q.current && clearTimeout(Q.current));
  }, Re = b(_e, 50, true), Ne = b(ge, 50, true);
  (0, import_react.useEffect)(() => {
    var e2, t3;
    const r2 = new Set(ve);
    ye.forEach((e3) => {
      r2.add({ current: e3 });
    });
    const o3 = document.querySelector(`[id='${s2}']`);
    o3 && r2.add({ current: o3 });
    const n3 = () => {
      Se(false);
    }, l3 = R(Y), c2 = R(G.current);
    H2 && (window.addEventListener("scroll", n3), null == l3 || l3.addEventListener("scroll", n3), null == c2 || c2.addEventListener("scroll", n3)), j2 && window.addEventListener("resize", n3);
    const i2 = (e3) => {
      "Escape" === e3.key && Se(false);
    };
    L2 && window.addEventListener("keydown", i2);
    const a2 = [];
    be ? (window.addEventListener("click", Le), a2.push({ event: "click", listener: Oe })) : (a2.push({ event: "mouseenter", listener: Re }, { event: "mouseleave", listener: Ne }, { event: "focus", listener: Re }, { event: "blur", listener: Ne }), E2 && a2.push({ event: "mousemove", listener: Te }));
    const u2 = () => {
      fe.current = true;
    }, d2 = () => {
      fe.current = false, ge();
    };
    return T2 && !be && (null === (e2 = G.current) || void 0 === e2 || e2.addEventListener("mouseenter", u2), null === (t3 = G.current) || void 0 === t3 || t3.addEventListener("mouseleave", d2)), a2.forEach(({ event: e3, listener: t4 }) => {
      r2.forEach((r3) => {
        var o4;
        null === (o4 = r3.current) || void 0 === o4 || o4.addEventListener(e3, t4);
      });
    }), () => {
      var e3, t4;
      H2 && (window.removeEventListener("scroll", n3), null == l3 || l3.removeEventListener("scroll", n3), null == c2 || c2.removeEventListener("scroll", n3)), j2 && window.removeEventListener("resize", n3), be && window.removeEventListener("click", Le), L2 && window.removeEventListener("keydown", i2), T2 && !be && (null === (e3 = G.current) || void 0 === e3 || e3.removeEventListener("mouseenter", u2), null === (t4 = G.current) || void 0 === t4 || t4.removeEventListener("mouseleave", d2)), a2.forEach(({ event: e4, listener: t5 }) => {
        r2.forEach((r3) => {
          var o4;
          null === (o4 = r3.current) || void 0 === o4 || o4.removeEventListener(e4, t5);
        });
      });
    };
  }, [ae, ve, ye, L2, v]), (0, import_react.useEffect)(() => {
    let e2 = null != u ? u : "";
    !e2 && t2 && (e2 = `[data-tooltip-id='${t2}']`);
    const r2 = new MutationObserver((r3) => {
      const o3 = [];
      r3.forEach((r4) => {
        if ("attributes" === r4.type && "data-tooltip-id" === r4.attributeName) {
          r4.target.getAttribute("data-tooltip-id") === t2 && o3.push(r4.target);
        }
        if ("childList" === r4.type && (Y && [...r4.removedNodes].some((e3) => {
          var t3;
          return !!(null === (t3 = null == e3 ? void 0 : e3.contains) || void 0 === t3 ? void 0 : t3.call(e3, Y)) && (ue(false), Se(false), F(null), Q.current && clearTimeout(Q.current), ee.current && clearTimeout(ee.current), true);
        }), e2))
          try {
            const t3 = [...r4.addedNodes].filter((e3) => 1 === e3.nodeType);
            o3.push(...t3.filter((t4) => t4.matches(e2))), o3.push(...t3.flatMap((t4) => [...t4.querySelectorAll(e2)]));
          } catch (e3) {
          }
      }), o3.length && he((e3) => [...e3, ...o3]);
    });
    return r2.observe(document.body, { childList: true, subtree: true, attributes: true, attributeFilter: ["data-tooltip-id"] }), () => {
      r2.disconnect();
    };
  }, [t2, u, Y]);
  const ke = () => {
    z ? Ae(z) : E2 ? pe.current && Ae(pe.current) : N({ place: d, offset: p, elementReference: Y, tooltipReference: G.current, tooltipArrowReference: J.current, strategy: f2, middlewares: y2, border: V }).then((e2) => {
      we.current && (Object.keys(e2.tooltipStyles).length && ne(e2.tooltipStyles), Object.keys(e2.tooltipArrowStyles).length && ce(e2.tooltipArrowStyles), re(e2.place));
    });
  };
  (0, import_react.useEffect)(() => {
    ke();
  }, [ie, Y, P, q2, d, p, f2, z]), (0, import_react.useEffect)(() => {
    if (!(null == K ? void 0 : K.current))
      return () => null;
    const e2 = new ResizeObserver(() => {
      ke();
    });
    return e2.observe(K.current), () => {
      e2.disconnect();
    };
  }, [P, null == K ? void 0 : K.current]), (0, import_react.useEffect)(() => {
    var e2;
    const t3 = document.querySelector(`[id='${s2}']`), r2 = [...ye, t3];
    Y && r2.includes(Y) || F(null !== (e2 = ye[0]) && void 0 !== e2 ? e2 : t3);
  }, [s2, ye, Y]), (0, import_react.useEffect)(() => () => {
    Q.current && clearTimeout(Q.current), ee.current && clearTimeout(ee.current);
  }, []), (0, import_react.useEffect)(() => {
    let e2 = u;
    if (!e2 && t2 && (e2 = `[data-tooltip-id='${t2}']`), e2)
      try {
        const t3 = Array.from(document.querySelectorAll(e2));
        he(t3);
      } catch (e3) {
        he([]);
      }
  }, [t2, u]);
  const xe = !_2 && P && ie && Object.keys(oe).length > 0;
  return ae ? import_react.default.createElement(h2, { id: t2, role: "tooltip", className: (0, import_classnames.default)("react-tooltip", k, D.tooltip, D[l2], o2, `react-tooltip__place-${te}`, { [B]: xe, [x]: "fixed" === f2, [I]: T2 }), style: { ...q2, ...oe, opacity: void 0 !== Z && xe ? Z : void 0 }, ref: G }, P, import_react.default.createElement(h2, { className: (0, import_classnames.default)("react-tooltip-arrow", $, D.arrow, n2, { [C]: g2 }), style: le, ref: J })) : null;
};
var j = ({ content: t2 }) => import_react.default.createElement("span", { dangerouslySetInnerHTML: { __html: t2 } });
var q = ({ id: t2, anchorId: o2, anchorSelect: n2, content: l2, html: s2, render: a2, className: u, classNameArrow: d, variant: p = "dark", place: v = "top", offset: m = 10, wrapper: f2 = "div", children: y2 = null, events: h2 = ["hover"], openOnClick: w2 = false, positionStrategy: b2 = "absolute", middlewares: S2, delayShow: E2 = 0, delayHide: _2 = 0, float: g2 = false, hidden: T2 = false, noArrow: O2 = false, clickable: L2 = false, closeOnEsc: R2 = false, closeOnScroll: N2 = false, closeOnResize: k2 = false, style: x2, position: $2, isOpen: C2, border: I2, opacity: B2, setIsOpen: D2, afterShow: q2, afterHide: z }) => {
  const [W, M] = (0, import_react.useState)(l2), [P, K] = (0, import_react.useState)(s2), [U, X] = (0, import_react.useState)(v), [Y, F] = (0, import_react.useState)(p), [V, Z] = (0, import_react.useState)(m), [G, J] = (0, import_react.useState)(E2), [Q, ee] = (0, import_react.useState)(_2), [te, re] = (0, import_react.useState)(g2), [oe, ne] = (0, import_react.useState)(T2), [le, ce] = (0, import_react.useState)(f2), [ie, se] = (0, import_react.useState)(h2), [ae, ue] = (0, import_react.useState)(b2), [de, pe] = (0, import_react.useState)(null), { anchorRefs: ve, activeAnchor: me } = A(t2), fe = (e2) => null == e2 ? void 0 : e2.getAttributeNames().reduce((t3, r2) => {
    var o3;
    if (r2.startsWith("data-tooltip-")) {
      t3[r2.replace(/^data-tooltip-/, "")] = null !== (o3 = null == e2 ? void 0 : e2.getAttribute(r2)) && void 0 !== o3 ? o3 : null;
    }
    return t3;
  }, {}), ye = (e2) => {
    const t3 = { place: (e3) => {
      var t4;
      X(null !== (t4 = e3) && void 0 !== t4 ? t4 : v);
    }, content: (e3) => {
      M(null != e3 ? e3 : l2);
    }, html: (e3) => {
      K(null != e3 ? e3 : s2);
    }, variant: (e3) => {
      var t4;
      F(null !== (t4 = e3) && void 0 !== t4 ? t4 : p);
    }, offset: (e3) => {
      Z(null === e3 ? m : Number(e3));
    }, wrapper: (e3) => {
      var t4;
      ce(null !== (t4 = e3) && void 0 !== t4 ? t4 : f2);
    }, events: (e3) => {
      const t4 = null == e3 ? void 0 : e3.split(" ");
      se(null != t4 ? t4 : h2);
    }, "position-strategy": (e3) => {
      var t4;
      ue(null !== (t4 = e3) && void 0 !== t4 ? t4 : b2);
    }, "delay-show": (e3) => {
      J(null === e3 ? E2 : Number(e3));
    }, "delay-hide": (e3) => {
      ee(null === e3 ? _2 : Number(e3));
    }, float: (e3) => {
      re(null === e3 ? g2 : "true" === e3);
    }, hidden: (e3) => {
      ne(null === e3 ? T2 : "true" === e3);
    } };
    Object.values(t3).forEach((e3) => e3(null)), Object.entries(e2).forEach(([e3, r2]) => {
      var o3;
      null === (o3 = t3[e3]) || void 0 === o3 || o3.call(t3, r2);
    });
  };
  (0, import_react.useEffect)(() => {
    M(l2);
  }, [l2]), (0, import_react.useEffect)(() => {
    K(s2);
  }, [s2]), (0, import_react.useEffect)(() => {
    X(v);
  }, [v]), (0, import_react.useEffect)(() => {
    F(p);
  }, [p]), (0, import_react.useEffect)(() => {
    Z(m);
  }, [m]), (0, import_react.useEffect)(() => {
    J(E2);
  }, [E2]), (0, import_react.useEffect)(() => {
    ee(_2);
  }, [_2]), (0, import_react.useEffect)(() => {
    re(g2);
  }, [g2]), (0, import_react.useEffect)(() => {
    ne(T2);
  }, [T2]), (0, import_react.useEffect)(() => {
    ue(b2);
  }, [b2]), (0, import_react.useEffect)(() => {
    var e2;
    const r2 = new Set(ve);
    let l3 = n2;
    if (!l3 && t2 && (l3 = `[data-tooltip-id='${t2}']`), l3)
      try {
        document.querySelectorAll(l3).forEach((e3) => {
          r2.add({ current: e3 });
        });
      } catch (e3) {
        console.warn(`[react-tooltip] "${l3}" is not a valid CSS selector`);
      }
    const c2 = document.querySelector(`[id='${o2}']`);
    if (c2 && r2.add({ current: c2 }), !r2.size)
      return () => null;
    const i2 = null !== (e2 = null != de ? de : c2) && void 0 !== e2 ? e2 : me.current, s3 = new MutationObserver((e3) => {
      e3.forEach((e4) => {
        var t3;
        if (!i2 || "attributes" !== e4.type || !(null === (t3 = e4.attributeName) || void 0 === t3 ? void 0 : t3.startsWith("data-tooltip-")))
          return;
        const r3 = fe(i2);
        ye(r3);
      });
    }), a3 = { attributes: true, childList: false, subtree: false };
    if (i2) {
      const e3 = fe(i2);
      ye(e3), s3.observe(i2, a3);
    }
    return () => {
      s3.disconnect();
    };
  }, [ve, me, de, o2, n2]), (0, import_react.useEffect)(() => {
    (null == x2 ? void 0 : x2.border) && console.warn("[react-tooltip] Do not set `style.border`. Use `border` prop instead."), I2 && !CSS.supports("border", `${I2}`) && console.warn(`[react-tooltip] "${I2}" is not a valid \`border\`.`), (null == x2 ? void 0 : x2.opacity) && console.warn("[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead."), B2 && !CSS.supports("opacity", `${B2}`) && console.warn(`[react-tooltip] "${B2}" is not a valid \`opacity\`.`);
  }, []);
  let he = y2;
  const we = (0, import_react.useRef)(null);
  if (a2) {
    const t3 = a2({ content: null != W ? W : null, activeAnchor: de });
    he = t3 ? import_react.default.createElement("div", { ref: we, className: "react-tooltip-content-wrapper" }, t3) : null;
  } else
    W && (he = W);
  P && (he = import_react.default.createElement(j, { content: P }));
  const be = { id: t2, anchorId: o2, anchorSelect: n2, className: u, classNameArrow: d, content: he, contentWrapperRef: we, place: U, variant: Y, offset: V, wrapper: le, events: ie, openOnClick: w2, positionStrategy: ae, middlewares: S2, delayShow: G, delayHide: Q, float: te, hidden: oe, noArrow: O2, clickable: L2, closeOnEsc: R2, closeOnScroll: N2, closeOnResize: k2, style: x2, position: $2, isOpen: C2, border: I2, opacity: B2, setIsOpen: D2, afterShow: q2, afterHide: z, activeAnchor: de, setActiveAnchor: (e2) => pe(e2) };
  return import_react.default.createElement(H, { ...be });
};
h({ css: `:root{--rt-color-white:#fff;--rt-color-dark:#222;--rt-color-success:#8dc572;--rt-color-error:#be6464;--rt-color-warning:#f0ad4e;--rt-color-info:#337ab7;--rt-opacity:0.9}.core-styles-module_tooltip__3vRRp{visibility:hidden;position:absolute;top:0;left:0;pointer-events:none;opacity:0;transition:opacity 0.3s ease-out;will-change:opacity,visibility}.core-styles-module_fixed__pcSol{position:fixed}.core-styles-module_arrow__cvMwQ{position:absolute;background:inherit}.core-styles-module_noArrow__xock6{display:none}.core-styles-module_clickable__ZuTTB{pointer-events:auto}.core-styles-module_show__Nt9eE{visibility:visible;opacity:var(--rt-opacity)}`, type: "core" }), h({ css: `
.styles-module_tooltip__mnnfp{padding:8px 16px;border-radius:3px;font-size:90%;width:max-content}.styles-module_arrow__K0L3T{width:8px;height:8px;transform:rotate(45deg)}.styles-module_dark__xNqje{background:var(--rt-color-dark);color:var(--rt-color-white)}.styles-module_light__Z6W-X{background-color:var(--rt-color-white);color:var(--rt-color-dark)}.styles-module_success__A2AKt{background-color:var(--rt-color-success);color:var(--rt-color-white)}.styles-module_warning__SCK0X{background-color:var(--rt-color-warning);color:var(--rt-color-white)}.styles-module_error__JvumD{background-color:var(--rt-color-error);color:var(--rt-color-white)}.styles-module_info__BWdHW{background-color:var(--rt-color-info);color:var(--rt-color-white)}` });
export {
  q as Tooltip,
  g as TooltipProvider,
  T as TooltipWrapper,
  w as removeStyle
};
/*! Bundled license information:

react-tooltip/dist/react-tooltip.min.mjs:
  (*
  * React Tooltip
  * {@link https://github.com/ReactTooltip/react-tooltip}
  * @copyright ReactTooltip Team
  * @license MIT
  *)
*/
//# sourceMappingURL=react-tooltip.js.map
